{
  "hash": "d2df350767ba1aa66eb965feb664ddb9",
  "result": {
    "markdown": "---\ntitle: \"How I Choose Colors\"\ndate: 2024-04-15\nauthor: Kazuharu Yanagimoto\ndraft: true\ncategories: [R, Quarto]\nimage: img/thumbnail.png\ntwitter-card:\n    image: img/thumbnail.png\ntoc: true\nexecute:\n  eval: false\n  echo: false\n---\n\n::: {.cell}\n\n:::\n\n\n## 学者ならグラフに命をかけろ\n\nみなさん, 論文読んでいますか. 私はあんまり読んでません.\nほとんどはアブストラクトと表とグラフに目を通すだけです.\n\n\n## 色彩基礎理論\n\nコンピュータ上で色がRGBの0から255の値で表現されるということはこの記事を読む方はご存知でしょう.\nしかし, 色を選ぶ際にはRGB空間では原則選んではいけません, 色の印象とはRGB空間では**非線形**だからです.\n歪んだカップで計量し料理を行うようなものです.\nでは, 人間の印象に合わせた空間とはなにか, それが色相 (**Hue**), 彩度 (**Saturation**), 明度 (**Value**) の三要素からなる**HSV**空間です.\n\n\n\n### HSV空間の定義\n\n学者なら定義が気になるでしょう. 以下ではHSV空間の三要素について説明します.\n\n::: {.callout-note}\n\n## 明度 (Value)\n\n明度は色の明るさを表す要素で, 0から1の値で表現され, 以下の式で定義される.\n\n$$\n\\text{Value} = \\frac{\\max(R, G, B)}{255}\n$$\n\n:::\n\nこれは`rgb(255, 255, 255)` が白であり, `rgb(0, 0, 0)` が黒であることからも分かる通り直感的です.\n$R = 255$ と固定して, $G$ と $B$ を変化させたときに, 明るさの印象が変化しないことを確かめることができます.\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.callout-note}\n\n## 彩度 (Saturation)\n\n彩度は色の鮮やかさを表す要素で, 0から1の値で表現され, 以下の式で定義される.\n\n$$\n\\text{Saturation} = \\frac{\\max(R, G, B) - \\min(R, G, B)}{\\max(R, G, B)}\n$$\n\n:::\n\n彩度はRGBの最大と最小値の差の相対的な大きさです.\n$R$ を最大値, $B$ を最小値として $G$ がその間の値を取る時, 彩度が最大となります.\n\n\n::: {.cell}\n\n:::\n\n\n\n\n::: {.callout-note}\n\n\n## 色相 (Hue)\n\n色相は色の種類を表す要素で, 0から360度で表現されます. 0度が赤, 120度が緑, 240度が青です.\n\n$$\n\\text{Hue} = \\begin{cases}\n    0 & \\text{if } \\max(R, G, B) = \\min(R, G, B) \\\\\n    60 \\times \\left( \\frac{G - B}{\\max(R, G, B) - \\min(R, G, B)} \\right) & \\text{if } \\max(R, G, B) = R \\\\\n    60 \\times \\left( \\frac{B - R}{\\max(R, G, B) - \\min(R, G, B)}\\right) & \\text{if } \\max(R, G, B) = G \\\\\n    60 \\times \\left( \\frac{R - G}{\\max(R, G, B) - \\min(R, G, B)}\\right) & \\text{if } \\max(R, G, B) = B\n\\end{cases}\n$$\n\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n## 論文における色の選び方\n\n- 調和の理論\n- 識別性とカラーセーフティ\n- グレーロバストネスと色に頼らないグラフの作成\n\n\n## ダサいグラフの言語化\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}