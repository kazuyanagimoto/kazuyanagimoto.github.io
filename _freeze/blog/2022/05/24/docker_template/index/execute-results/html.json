{
  "hash": "1a3460d20d55a40a20e171dafffbf3c5",
  "result": {
    "markdown": "---\ntitle: \"My Docker Template for R\"\ndate: 2022-05-24\nauthor: Kazuharu Yanagimoto\ndraft: false\ncategories: [R, Docker]\nimage: \"feature.png\"\nexecute:\n    eval: false\n---\n\nDocker is one of the best environments for **reproductivity** of the research.\nI use Docker for basically all my projects, but it took me about 2 years to get to a satisfactory environment setup. I would like to share it here as a template.\n\n## Quick Start\n1. Clone [this repository](https://github.com/nicetak/dockerR)\n1. Open it in VSCode and add Remote-Containers Extension\n1. From the command palette, choose \"open folder in container\"\n1. Open `localhost:8787` in a browser\n1. Create a project for this project directory (by default, choose `/home/rstudio/work`)\n1. RUN `renv::init()` in the R console\n1. Set up a [DVC](https://dvc.org/) environment\n    1. Prepare a folder in Google Drive (and copy the folder code)\n    1. Init DVC\n\n        ```{bash}\n        dvc init\n        dvc remote add --default myremote gdrive://GDRIVE_FOLDER_CODE\n        ```\n\n\n\n## Brief Explanations\nIn this section, I briefly comment on each file. I assume you are familiar with\n\n- R, Rstudio & `renv`\n- [Docker](https://www.docker.com/)\n- [VSCode](https://code.visualstudio.com/) and its [Remote-Containers](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers) extension\n\nI manage data files by [DVC](https://dvc.org/).\nBut if you have another strategy for data management, ignore these parts.\n\n\n### `Dockerfile`\n```{.bash}\nFROM rocker/verse\n\nRUN apt update && apt install -y gnupg openssh-client libpoppler-cpp-dev\n\n# DVC\nRUN wget \\\n       https://dvc.org/deb/dvc.list \\\n       -O /etc/apt/sources.list.d/dvc.list && \\\n    wget -qO - https://dvc.org/deb/iterative.asc | apt-key add - && \\\n    apt update && \\\n    apt install -y dvc \n\n# R Packages\nRUN R -e \"install.packages(c('languageserver', 'renv'))\"\n\n# Rstudio Global Options\nCOPY --chown=rstudio:rstudio .config/rstudio/rstudio-prefs.json /home/rstudio/.config/rstudio/rstudio-prefs.json\n```\n\n#### R image\nIf you don't have any preferences, I recommend you use one of the rocker image series\nof [rocker-org](https://github.com/rocker-org/rocker):\n\n- rocker/rstudio\n- rocker/tidyverse\n- rocker/verse\n- rocker/geospatial\n\nBecause I currently write a paper by Rmarkdown,\nI usually use `rocker/verse` and use `rocker/geospatial` for spatial analysis.\n\n#### DVC\nI just follow the official guide for [Install from repository](https://dvc.org/doc/install/linux#from-repo-on-debian-ubuntu).\nIf your environment includes python, it is easier to install it via `pip`.\n\n#### R packages\nI use `renv` for dependency management.\n`languageserver` allows us to run a code in VSCode, but I don't usually use it.\n\n#### Rstudio Global Options\nWhen Rstudio launches, it loads the `~/.config/rstudio/rstudio-prefs.json` file for general settings. So I prepare `/.config/rstudio/rstudio-prefs.json`,\nand it allows me to use Rstudio with my favorite settings.\n\nIf you want to use your own settings, I recommend you\n\n1. Open Rstudio \n1. Set up by GUI (Tools -> Global Options)\n1. Copy `~/.config/rstudio/rstudio-prefs.json` (in container)\n1. Paste it on `/.config/rstudio/rstudio-prefs.json` (in host)\n\n\n### `docker-compose.yml`\n\n```{.yaml}\nversion: '3'\nservices:\n    rstudio:\n        build:\n            context: .\n        environment:\n            - TZ=Europe/Madrid\n            - DISABLE_AUTH=true\n            - RENV_PATHS_CACHE=/home/rstudio/.renv/cache\n        volumes:\n            - .:/home/rstudio/work\n            - $HOME/.renv:/home/rstudio/.renv/cache\n```\n\n#### DISABLE_AUTH=true\nYou don't need to type a password for each new session.\n\n#### Cache for `renv`\nBy setting the `RENV_PATH_CACHE` and mounting the directory,\nyou don't need to re-install packages.\nIn other words, you can share packages with other (docker) projects and\ndon't have to re-install all the packages when you rebuild a container.\n\n\n\nHave fun!\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}