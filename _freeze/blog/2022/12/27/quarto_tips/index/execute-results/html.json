{
  "hash": "8246aa431344b11b2500e58e03ff4e41",
  "result": {
    "markdown": "---\ntitle: \"Some Quarto Tips for Academic Presentation\"\ndate: 2022-12-28\nauthor: Kazuharu Yanagimoto\ndraft: false\ncategories: [R, Quarto]\nimage: https://source.unsplash.com/F2KRf_QfCqw\ntwitter-card:\n  image: https://source.unsplash.com/F2KRf_QfCqw\nexecute:\n    eval: false\n---\n\n\n## Are You a Beamer Fan?\nThe other day, I used slides made with [Quarto](https://quarto.org/) in a presentation at a conference.\nIn the Economics community, 98% of people use Beamer of $\\LaTeX$,\nand about 2% use PowerPoint for their presentations.\nI personally don't like Beamer's design,\nand I think PowerPoint has a problem with maintainability\n(i.e., can it be easily changed) in case of ongoing projects.\nI like Quarto for the following reasons:\n\n1. **Reasonably good design**. And highly customizable.\n1. **Time saving**. Slides are written in the markdown notation, so you can make it with the same amount of effort as Beamer (unless you care about the designðŸ˜‰)\n1. **Easily maintainable**. Variables can be used in the text, so the numbers are automatically updated even if the model or analysis is slightly changed.\n\nHere, I write some tips on Quarto for academic presentations. For the basic slide creation in Quarto, please refer to the [official documentation]((https://quarto.org/docs/presentations/revealjs/))\nor Tom Mock's [slides]((https://rstudio-conf-2022.github.io/get-started-quarto/materials/05-presentations.html#/presentations)) at the RStudio conference.\nThe slides used at the conference presentation are not yet ready for public release,\nso I prepare these example slides\n\n\n```{=html}\n<iframe class=\"slide-deck\" src=\"https://kazuyanagimoto.com/quarto-slides-example/code/slides/quarto_academic_tips/slides.html\"></iframe>\n```\n\n\n\n[ {{< fa chalkboard-teacher >}} Slides](https://kazuyanagimoto.com/quarto-slides-example/code/slides/quarto_academic_tips/slides.html) &nbsp; \n[ {{< fa file-pdf >}} PDF](https://kazuyanagimoto.com/quarto-slides-example/code/slides/quarto_academic_tips/slides.pdf) &nbsp; \n[ {{< fa brands github >}} Code](https://github.com/nicetak/quarto-slides-example)\n\n\n## Data\n\nI render tables and plots inside of slides.\nIn other words, I am not using the image files for the article.\nThis is because\n\n1. Proper font sizes in the article are **too small** in presentation slides\n1. **Highlighting** is not easy. You need to create another figure/table or use complicated TikZ\n1. I want to **unify the design** of slides and figures&tables\n\nHence, I create and save a data frame in a separate file and load it just before plotting it.\n\n```{.r}\nload(\"tb_hoge.rds\")\ntb_hoge |>\n  ggplot(aes(x, y)) +\n  geom_point()\n```\n\nYou can use this data frame to refer to its values in a slide text.\n\n\n::: {.cell}\n\n```{.markdown .cell-code}\nIn 2021, `r tb_hoge$value[tb_hoge$year == 2021]`% of peopleâ€¦\n```\n:::\n\n\nThis is convenient in case you change your analysis slightly and the values in `tb_hoge.rds` change.^[\n  In economics, changing the age group of the sample or the parameters of the model\n  sometimes lead to changes in the results.\n  In addition, we sometimes found mistakes in cleaning the data.\n]\nThe values will be updated by re-rendering slides.\n\n\n## Theme\n\nThere are 11 built-in themes provided for Reveal presentations.\nThese are good designs, but to match them with figures&tables,\nI write `custom.scss` and make my own theme.\nCurrently, it is like [xaringanthemer](https://pkg.garrickadenbuie.com/xaringanthemer/)'s\n`style_mono_accent()` theme.\nYou can check about the customizable parts in the [official document](https://quarto.org/docs/presentations/revealjs/themes.html#customizing-themes).\n\n\n::: {.cell}\n\n```{.css .cell-code  code-fold=\"true\"}\n/*-- scss:defaults --*/\n\n@import url(https://fonts.googleapis.com/css?family=Montserrat:300,300i&display=swap);\n@import url(https://fonts.googleapis.com/css?family=Josefin+Sans&display=swap);\n@import url(https://fonts.googleapis.com/css?family=Fira+Mono&display=swap);\n\n// fonts\n$font-family-sans-serif: Montserrat, sans-serif !default;\n$font-family-monospace: \"Fira Mono\", monospace  !default;\n\n// colors\n$body-bg: #fff !default;\n$body-color: #272822 !default;\n$link-color: #055099 !default;\n\n// headings\n$presentation-heading-font: \"Josefin Sans\", sans-serif !default;\n$presentation-heading-color: #1C5253 !default;\n\n$h1-font-size: 1.6em !default;\n$h2-font-size: 1.3em !default;\n$h3-font-size: 1.15em !default;\n$h4-font-size: 1em !default;\n\n// code blocks\n$code-block-border-color: #93a1a1 !default;\n$code-color: $presentation-heading-color;\n\n//\n// Color system\n//\n\n// stylelint-disable\n$white:    #fff !default;\n$gray-100: #fdf6e3 !default;\n$gray-200: #eee8d5 !default;\n$gray-300: #dee2e6 !default;\n$gray-400: #ced4da !default;\n$gray-500: #adb5bd !default;\n$gray-600: #839496 !default;\n$gray-700: #495057 !default;\n$gray-800: #073642 !default;\n$gray-900: #002b36 !default;\n$black:    #000 !default;\n\n/*-- scss:rules --*/\n\n.title{\n    color: $white;\n    font-size: 2.5em;\n    font-family: $presentation-heading-font;\n    position: absolute;\n    top: 20%\n}\n\n.subtitle{\n    color: $gray-100;\n    font-size: $h2-font-size;\n    font-family: $presentation-heading-font;\n    position: absolute;\n    top: 33%\n}\n\n\n.author {\n    color: $white;\n    font-size: $h3-font-size;\n    font-family: $presentation-heading-font;\n    position: absolute;\n    bottom: 10%;\n}\n\n.date {\n    color: $white;\n    font-size: $h4-font-size;\n    font-family: $presentation-heading-font;\n    position: absolute;\n    bottom: 5%;\n}\n\n\n.message{\n    color: $presentation-heading-color;\n    font-size: $h2-font-size;\n    font-family: $presentation-heading-font;\n    text-align: center;\n}\n\n.space-left {\n    margin-left: 5%;\n}\n\n\n.center-xy {\n    margin: 0;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    -ms-transform: translateY(-50%), translateX(-50%);\n    transform: translateY(-50%), translateX(-50%);\n}\n\n\n.small {\n    font-size: 0.8em\n}\n\n.Large {\n    font-size: 1.6em\n}\n\nsection.has-dark-background a {\n    color: $white;\n    border-style: dashed;\n    border-bottom-width: 1px;\n}\n\nsection.has-dark-background a:hover {\n    color: $white;\n    border-bottom: solid\n}\n\n```\n:::\n\n\n\n### Ad-hoc CSS\n\nI write frequently used CSS settings in `custom.css`,\nbut sometimes I want to use a CSS environment on an ad-hoc basis\n(for example, to change the font size slightly.)\n\nIn these cases, you can write them in `style=` environment:\n\n```{.md}\n::: {style=\"font-size: 0.68\"}\n\nSentences you want to make smaller\n\n:::\n```\n\n### Fragments\n\nQuarto (or Reveal.js) allows some complicated animation.\nIf you are interested, you might want to see Tom Mock's\n[this part]((https://rstudio-conf-2022.github.io/get-started-quarto/materials/05-presentations.html#/lists))\nof the slides.\n\nApart from this, as discussed\n[here](https://community.rstudio.com/t/quarto-revealjs-presentation-2-columns-with-pause/151950),\nthe original fragment separator `. . .` does not correctly work in environments like `columns`.\nFrom my experience, `fragment` environment solves them.\n\n## Plots\n### Theme\n\nMinimizing elements is a starting point of slide design.\nFor that purpose, it is important to use the same fonts and colors for figures (and tables)\nas the slides.\nThis is the reason why I used to use [xaringanthemer]((https://pkg.garrickadenbuie.com/xaringanthemer/)),\nwhich automatically generates the `ggplot2` theme corresponding to the slides' theme.\nUnfortunately, there have been no packages for Quarto slides (as far as I know),\nI declare this `theme_quarto()` function.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nblend_colors <- function(x, y, alpha = 0.5) {\n  x <- colorspace::hex2RGB(x)\n  y <- colorspace::hex2RGB(y)\n  z <- colorspace::mixcolor(alpha, x, y)\n  colorspace::hex(z)\n}\ncolor_blender <- function(x, y) function(alpha = 0.5) blend_colors(x, y, alpha)\ntheme_quarto <- function (\n    text_color = color_text,\n    background_color = color_bg,\n    text_font = font_text,\n    text_font_size = 30,\n    accent_color = color_base,\n    title_font = font_title,\n    title_font_size = 30\n){\n    blend <- color_blender(text_color, background_color)\n    ggplot2::theme(\n        line = ggplot2::element_line(color = blend(0.2)),\n        rect = ggplot2::element_rect(fill = background_color),\n        title = ggplot2::element_text(\n            color = accent_color,\n            family = title_font,\n            size = title_font_size\n        ),\n        plot.background = ggplot2::element_rect(\n            fill = background_color,\n            color = background_color\n        ),\n        panel.background = ggplot2::element_rect(\n            fill = background_color,\n            color = background_color\n        ),\n        panel.grid.major = ggplot2::element_line(\n            color = blend(0.8),\n            inherit.blank = TRUE\n        ),\n        panel.grid.minor = ggplot2::element_line(\n            color = blend(0.9),\n            inherit.blank = TRUE\n        ),\n        axis.title = ggplot2::element_text(size = title_font_size * 0.8),\n        axis.ticks = ggplot2::element_line(color = blend(0.8)),\n        axis.text = ggplot2::element_text(color = blend(0.4), size = title_font_size * 0.7),\n        legend.key = ggplot2::element_rect(fill = \"transparent\", colour = NA),\n        legend.text = ggplot2::element_text(size = title_font_size * 0.8, family = title_font),\n        plot.caption = ggplot2::element_text(\n            size = text_font_size * 0.8,\n            color = blend(0.3)\n        )\n    )\n}\n```\n:::\n\n\nWhile the original `xaringanthemer::theme_xaringan()` redefines\nthe primary color of `ggplot2::geom_*` by `ggplot2::update_geom_defaults`,\nmy function does not.\nI did not overwrite it because color palettes must be specified manually for 2+ color cases, anyway.\nYou can use it like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolor_base <- \"#1C5253\"\ntb_hoge |>\n  ggplot(aes(x, y)) +\n  geom_point(color = color_base) +\n  theme_quarto()\n```\n:::\n\n\n### Highlighting\n\nThe most famous way to highlight plots should be [gghighlight](https://cran.r-project.org/web/packages/gghighlight/vignettes/gghighlight.html).\nYou can proceed with your stories smoothly and clearly by\n\n\n::: {.cell filename='First Slide'}\n\n```{.r .cell-code}\np <- tb_hoge |>\n  ggplot(aes(x, y)) +\n  geom_col(color = color_base) +\n  theme_quarto()\n\np\n```\n:::\n\n::: {.cell filename='Second Slide'}\n\n```{.r .cell-code}\np + gghighlight(x == \"Japan\")\n```\n:::\n\n\n\n## Tables\n\n### `markdown` vs. `kableExtra` vs. `gt`?\n\nI think they are three popular ways to create tables in HTML slides.\nwhile each of them has pros and cons, I am using `gt` because\n\n**Markdown Table**\n\n- No highlighting\n- No `multirow` nor `multicol` from $\\LaTeX$\n\n**kableExtra**\n\n- Syntax is a little more complicated than `gt` (e.g., need to mutate a string column for percentages.)\n- Highlighting is slightly more complicated than `gt`\n\nNote that I use `kableExtra` for tables in an article due to the following problem.\n\n### Problems with Mathematic Expressions\n\nUnfortunately, it is difficult to use mathematical expressions in a table in Quarto.\n`gt` does not support $\\LaTeX$ notation.^[\n  This [issue](https://github.com/rstudio/gt/issues/375) has been raised in 2019,\n  but it does not seem to be solved quickly.\n] Also, mathematical expressions of `kableExtra` are not rendered in Quarto ([GitHub Issue](https://github.com/quarto-dev/quarto-cli/issues/555)).\nYou can solve it by\n\n```{.r}\nkableExtra::kbl(data, format=\"markdown\")\n```\n\nbut it contains the abovementioned disadvantages of markdown tables.\n\nThen, I compromise by using\n\n- Unicode Greek letters (Î¸, Ï„, Î´, etc.)\n- HTML tags (`<sup>` and `<sub>`)\n\nand evaluating them by `gt::fmt_markdown()`.\nMathematical expressions in tables are usually simple,\nso I don't have any problems so far.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(a = c(\"Î¸ = 0\", \"Ï„<sup>Î´-1</sup>\")) |>\n  gt() |>\n  fmt_markdown(columns = everything())\n```\n:::\n\n\n### Highlighting\n\nThe gt package itself can also highlight cells in a table with the function `tab_style()`.\nHowever, this requires redundant writing,\nso `gtExtras::gt_highlight_rows()` and `gtExtras::gt_highlight_cols()` are useful\nif you want to highlight row/column-wise.\n\n## Export\n\n### HTML or PDF?\n\nAlthough I think you use a prepared PC for your presentation,\nsince it is difficult to imagine a PC without a browser,\nthe HTML format is also acceptable.\nIf you write the following in the YAML header,\nonly one self-contained HTML file will be output.\nSo you can easily carry it around like a PDF file.^[\n  The option `self-contained: true` produces a deprecated warning.\n]\n\n```{.yaml}\nformat:\n  revealjs:\n    standalone: true\n    embed-resources: true\n```\n\nHowever, you will be asked to submit your slides in PDF format in various situations.\nAnd whether or not you actually present your presentation in PDF format,\nit is a good idea to have PDF slides on hand for insurance purposes.\n\n1. Open the HTML file in your browser and press <kbd>E</kbd>\n1. Click \"Print\" on the browser, then \"Save as PDF\"\n\nIf you want to separate fragments, specify `pdf-separate-fragments: true` in YAML.\n\n### Problems with Hyperlink\n\nA hyperlink that jumps to each slide is essentially a reference to an `<h2>` tag,\nso the link can be written as:\n\n```{.markdown}\n## A Slide {#sec-slide}\n\n<a href=\"#/sec-detail\">detailâ†—</a>\n\n## A Detail Slide {#sec-detail}\n\n<a href=\"#/sec-slide\">â†©ï¸Ž</a>\n```\n\nHowever, as far as I know, the link is not reflected in the above PDF output. If anyone knows a solution to this problem, I would appreciate it if you could let me know.\n\n## Fin.\nThese are some of my ideas for using Quarto for academic presentations.\nI think that Quarto's slides are quite suitable for academic presentations,\nbecause of their simple syntax, high degree of freedom in design,\nand high maintainability in numbers.\nI hope this is useful for you.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}