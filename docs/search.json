[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kazuharu Yanagimoto",
    "section": "",
    "text": "I am a PhD student at CEMFI. My research fields are labor, macro, and especially family economics.\n\nRead More →"
  },
  {
    "objectID": "talks/index.html",
    "href": "talks/index.html",
    "title": "Talks that Last",
    "section": "",
    "text": "Copyright\n\n\n\nExcept where noted, all content is  Kazuharu Yanagimoto and licensed under Creative Commons."
  },
  {
    "objectID": "talks/index.html#section",
    "href": "talks/index.html#section",
    "title": "Talks that Last",
    "section": "2023",
    "text": "2023\n\n\n    \n        \n            \n        \n        \n            \n                社会科学のためのDocker入門 \n            \n            \n                August 31, 2023 ∙ \n                RA Bootcamp, 湘南国際村\n            \n            VSCodeを用いたDockerによる環境構築の方法についてレクチャーしました.\n            \n                \n                    \n                         Slides\n                    \n                \n                \n                    \n                         GitHub\n                    \n                \n            \n        \n    \n    \n        \n            \n        \n        \n            \n                Non-designer's Quarto Presentation \n            \n            \n                March 4, 2023 ∙ \n                Tokyo.R (via zoom)\n            \n            第104回Tokyo.RにてQuartoによるRevealjsスライドのデザインについてお話しました.\n            \n                \n                    \n                         Slides\n                    \n                \n                \n                    \n                         Code\n                    \n                \n            \n        \n    \n    \n        \n            \n        \n        \n            \n                An Advanced Introdution to R \n            \n            \n                January 13, 2023 ∙ \n                CEMFI, Madrid\n            \n            Here is a talk on practical techniques to write a paper with R\n            \n                \n                    \n                         Slides\n                    \n                \n                \n                    \n                         GitHub\n                    \n                \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "talks/index.html#section-1",
    "href": "talks/index.html#section-1",
    "title": "Talks that Last",
    "section": "2022",
    "text": "2022\n\n\n    \n        \n            \n        \n        \n            \n                Git & GitHub Workshop \n            \n            \n                September 23, 2022 ∙ \n                CEMFI, Madrid\n            \n            Here is a talk I gave on managing codes and data by using GitHub and DVC for economists.\n            \n                \n                    \n                         Slides\n                    \n                \n                \n                    \n                         GitHub\n                    \n                \n            \n        \n    \n    \n        \n            \n        \n        \n            \n                El Camino del PhD \n            \n            \n                July 10, 2022 ∙ \n                東京大学 (via Zoom)\n            \n            米国大学院学生会主催の海外大学院留学説明会@東京大学で所属するCEMFIでの生活についてお話しました.\n            \n                \n                    \n                         Video\n                    \n                \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "about/index.html",
    "href": "about/index.html",
    "title": "Hi There!",
    "section": "",
    "text": "I am a Ph.D. student in Economics at CEMFI in Madrid, Spain.\nMy research field is family economics, broadly speaking, I am interested in questions like:\nMaster in Economics ∙ CEMFI ∙ 2021\nBachelor in Economics ∙ University of Tokyo ∙ 2019"
  },
  {
    "objectID": "about/index.html#a-blog-that-works",
    "href": "about/index.html#a-blog-that-works",
    "title": "Hi There!",
    "section": "A BLOG THAT WORKS",
    "text": "A BLOG THAT WORKS\n\n\n\n    \n            \n                \n            \n        \n            A Minimal & Portable Research Environment with Docker\n            \n                \n                    R\n                \n                \n                    Docker\n                \n                \n                    VSCode\n                \n                \n                    Julia\n                \n                \n                    LaTeX\n                \n                \n                    Python\n                \n            \n            \n        \n    \n\n\nNo matching items\n\n\n\nSee All →"
  },
  {
    "objectID": "about/index.html#talks-that-last",
    "href": "about/index.html#talks-that-last",
    "title": "Hi There!",
    "section": "TALKS THAT LAST",
    "text": "TALKS THAT LAST\n\n\n            \n                \n                    \n                \n                \n                    \n                        An Advanced Introdution to R \n                    \n                    \n                        Jan 13, 2023 ∙ \n                        CEMFI, Madrid\n                    \n                    Here is a talk on practical techniques to write a paper with R\n                    \n                        \n                            \n                                 Slides\n                            \n                        \n                        \n                            \n                                 GitHub\n                            \n                        \n                    \n                \n            \n\n\nNo matching items\n\n\n\nSee All →"
  },
  {
    "objectID": "blog/2022/05/24/docker_template/index.html",
    "href": "blog/2022/05/24/docker_template/index.html",
    "title": "My Docker Template for R",
    "section": "",
    "text": "Docker is one of the best environments for reproductivity of the research. I use Docker for basically all my projects, but it took me about 2 years to get to a satisfactory environment setup. I would like to share it here as a template."
  },
  {
    "objectID": "blog/2022/05/24/docker_template/index.html#quick-start",
    "href": "blog/2022/05/24/docker_template/index.html#quick-start",
    "title": "My Docker Template for R",
    "section": "Quick Start",
    "text": "Quick Start\n\nClone this repository\nOpen it in VSCode and add Remote-Containers Extension\nFrom the command palette, choose “open folder in container”\nOpen localhost:8787 in a browser\nCreate a project for this project directory (by default, choose /home/rstudio/work)\nRUN renv::init() in the R console\nSet up a DVC environment\n\nPrepare a folder in Google Drive (and copy the folder code)\nInit DVC\ndvc init\ndvc remote add --default myremote gdrive://GDRIVE_FOLDER_CODE"
  },
  {
    "objectID": "blog/2022/05/24/docker_template/index.html#brief-explanations",
    "href": "blog/2022/05/24/docker_template/index.html#brief-explanations",
    "title": "My Docker Template for R",
    "section": "Brief Explanations",
    "text": "Brief Explanations\nIn this section, I briefly comment on each file. I assume you are familiar with\n\nR, Rstudio & renv\nDocker\nVSCode and its Remote-Containers extension\n\nI manage data files by DVC. But if you have another strategy for data management, ignore these parts.\n\nDockerfile\nFROM rocker/verse\n\nRUN apt update && apt install -y gnupg openssh-client libpoppler-cpp-dev\n\n# DVC\nRUN wget \\\n       https://dvc.org/deb/dvc.list \\\n       -O /etc/apt/sources.list.d/dvc.list && \\\n    wget -qO - https://dvc.org/deb/iterative.asc | apt-key add - && \\\n    apt update && \\\n    apt install -y dvc \n\n# R Packages\nRUN R -e \"install.packages(c('languageserver', 'renv'))\"\n\n# Rstudio Global Options\nCOPY --chown=rstudio:rstudio .config/rstudio/rstudio-prefs.json /home/rstudio/.config/rstudio/rstudio-prefs.json\n\nR image\nIf you don’t have any preferences, I recommend you use one of the rocker image series of rocker-org:\n\nrocker/rstudio\nrocker/tidyverse\nrocker/verse\nrocker/geospatial\n\nBecause I currently write a paper by Rmarkdown, I usually use rocker/verse and use rocker/geospatial for spatial analysis.\n\n\nDVC\nI just follow the official guide for Install from repository. If your environment includes python, it is easier to install it via pip.\n\n\nR packages\nI use renv for dependency management. languageserver allows us to run a code in VSCode, but I don’t usually use it.\n\n\nRstudio Global Options\nWhen Rstudio launches, it loads the ~/.config/rstudio/rstudio-prefs.json file for general settings. So I prepare /.config/rstudio/rstudio-prefs.json, and it allows me to use Rstudio with my favorite settings.\nIf you want to use your own settings, I recommend you\n\nOpen Rstudio\nSet up by GUI (Tools -&gt; Global Options)\nCopy ~/.config/rstudio/rstudio-prefs.json (in container)\nPaste it on /.config/rstudio/rstudio-prefs.json (in host)\n\n\n\n\ndocker-compose.yml\nversion: '3'\nservices:\n    rstudio:\n        build:\n            context: .\n        environment:\n            - TZ=Europe/Madrid\n            - DISABLE_AUTH=true\n            - RENV_PATHS_CACHE=/home/rstudio/.renv/cache\n        volumes:\n            - .:/home/rstudio/work\n            - $HOME/.renv:/home/rstudio/.renv/cache\n\nDISABLE_AUTH=true\nYou don’t need to type a password for each new session.\n\n\nCache for renv\nBy setting the RENV_PATH_CACHE and mounting the directory, you don’t need to re-install packages. In other words, you can share packages with other (docker) projects and don’t have to re-install all the packages when you rebuild a container.\nHave fun!"
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "September 6, 2023\n        \n        \n            A Minimal & Portable Research Environment with Docker\n            \n                \n                    R\n                \n                \n                    Docker\n                \n                \n                    VSCode\n                \n                \n                    Julia\n                \n                \n                    LaTeX\n                \n                \n                    Python\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            June 10, 2023\n        \n        \n            Scientific Communication with Quarto: Economic Models\n            \n                \n                    Julia\n                \n                \n                    Observable JS\n                \n                \n                    Quarto\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            April 30, 2023\n        \n        \n            Quarto Is Multi-lingual!\n            \n                \n                    Julia\n                \n                \n                    Python\n                \n                \n                    R\n                \n                \n                    Quarto\n                \n                \n                    Stata\n                \n            \n            \n        \n        \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "blog/2022/12/27/quarto_tips/index.html",
    "href": "blog/2022/12/27/quarto_tips/index.html",
    "title": "Some Quarto Tips for Academic Presentation",
    "section": "",
    "text": "The other day, I used slides made with Quarto in a presentation at a conference. In the Economics community, 98% of people use Beamer of \\(\\LaTeX\\), and about 2% use PowerPoint for their presentations. I personally don’t like Beamer’s design, and I think PowerPoint has a problem with maintainability (i.e., can it be easily changed) in case of ongoing projects. I like Quarto for the following reasons:\n\nReasonably good design. And highly customizable.\nTime saving. Slides are written in the markdown notation, so you can make it with the same amount of effort as Beamer (unless you care about the design😉)\nEasily maintainable. Variables can be used in the text, so the numbers are automatically updated even if the model or analysis is slightly changed.\n\nHere, I write some tips on Quarto for academic presentations. For the basic slide creation in Quarto, please refer to the official documentation or Tom Mock’s slides at the RStudio conference. The slides used at the conference presentation are not yet ready for public release, so I prepare these example slides\n\n Slides    PDF    Code"
  },
  {
    "objectID": "blog/2022/12/27/quarto_tips/index.html#data",
    "href": "blog/2022/12/27/quarto_tips/index.html#data",
    "title": "Some Quarto Tips for Academic Presentation",
    "section": "Data",
    "text": "Data\nI render tables and plots inside of slides. In other words, I am not using the image files for the article. This is because\n\nProper font sizes in the article are too small in presentation slides\nHighlighting is not easy. You need to create another figure/table or use complicated TikZ\nI want to unify the design of slides and figures&tables\n\nHence, I create and save a data frame in a separate file and load it just before plotting it.\nload(\"tb_hoge.rds\")\ntb_hoge |&gt;\n  ggplot(aes(x, y)) +\n  geom_point()\nYou can use this data frame to refer to its values in a slide text.\n\nIn 2021, `r tb_hoge$value[tb_hoge$year == 2021]`% of people…\n\nThis is convenient in case you change your analysis slightly and the values in tb_hoge.rds change.1 The values will be updated by re-rendering slides."
  },
  {
    "objectID": "blog/2022/12/27/quarto_tips/index.html#theme",
    "href": "blog/2022/12/27/quarto_tips/index.html#theme",
    "title": "Some Quarto Tips for Academic Presentation",
    "section": "Theme",
    "text": "Theme\nThere are 11 built-in themes provided for Reveal presentations. These are good designs, but to match them with figures&tables, I write custom.scss and make my own theme. Currently, it is like xaringanthemer’s style_mono_accent() theme. You can check about the customizable parts in the official document.\n\n\nCode\n/*-- scss:defaults --*/\n\n@import url(https://fonts.googleapis.com/css?family=Montserrat:300,300i&display=swap);\n@import url(https://fonts.googleapis.com/css?family=Josefin+Sans&display=swap);\n@import url(https://fonts.googleapis.com/css?family=Fira+Mono&display=swap);\n\n// fonts\n$font-family-sans-serif: Montserrat, sans-serif !default;\n$font-family-monospace: \"Fira Mono\", monospace  !default;\n\n// colors\n$body-bg: #fff !default;\n$body-color: #272822 !default;\n$link-color: #055099 !default;\n\n// headings\n$presentation-heading-font: \"Josefin Sans\", sans-serif !default;\n$presentation-heading-color: #1C5253 !default;\n\n$h1-font-size: 1.6em !default;\n$h2-font-size: 1.3em !default;\n$h3-font-size: 1.15em !default;\n$h4-font-size: 1em !default;\n\n// code blocks\n$code-block-border-color: #93a1a1 !default;\n$code-color: $presentation-heading-color;\n\n//\n// Color system\n//\n\n// stylelint-disable\n$white:    #fff !default;\n$gray-100: #fdf6e3 !default;\n$gray-200: #eee8d5 !default;\n$gray-300: #dee2e6 !default;\n$gray-400: #ced4da !default;\n$gray-500: #adb5bd !default;\n$gray-600: #839496 !default;\n$gray-700: #495057 !default;\n$gray-800: #073642 !default;\n$gray-900: #002b36 !default;\n$black:    #000 !default;\n\n/*-- scss:rules --*/\n\n.title{\n    color: $white;\n    font-size: 2.5em;\n    font-family: $presentation-heading-font;\n    position: absolute;\n    top: 20%\n}\n\n.subtitle{\n    color: $gray-100;\n    font-size: $h2-font-size;\n    font-family: $presentation-heading-font;\n    position: absolute;\n    top: 33%\n}\n\n\n.author {\n    color: $white;\n    font-size: $h3-font-size;\n    font-family: $presentation-heading-font;\n    position: absolute;\n    bottom: 10%;\n}\n\n.date {\n    color: $white;\n    font-size: $h4-font-size;\n    font-family: $presentation-heading-font;\n    position: absolute;\n    bottom: 5%;\n}\n\n\n.message{\n    color: $presentation-heading-color;\n    font-size: $h2-font-size;\n    font-family: $presentation-heading-font;\n    text-align: center;\n}\n\n.space-left {\n    margin-left: 5%;\n}\n\n\n.center-xy {\n    margin: 0;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    -ms-transform: translateY(-50%), translateX(-50%);\n    transform: translateY(-50%), translateX(-50%);\n}\n\n\n.small {\n    font-size: 0.8em\n}\n\n.Large {\n    font-size: 1.6em\n}\n\nsection.has-dark-background a {\n    color: $white;\n    border-style: dashed;\n    border-bottom-width: 1px;\n}\n\nsection.has-dark-background a:hover {\n    color: $white;\n    border-bottom: solid\n}\n\n\n\nAd-hoc CSS\nI write frequently used CSS settings in custom.css, but sometimes I want to use a CSS environment on an ad-hoc basis (for example, to change the font size slightly.)\nIn these cases, you can write them in style= environment:\n::: {style=\"font-size: 0.68\"}\n\nSentences you want to make smaller\n\n:::\n\n\nFragments\nQuarto (or Reveal.js) allows some complicated animation. If you are interested, you might want to see Tom Mock’s this part of the slides.\nApart from this, as discussed here, the original fragment separator . . . does not correctly work in environments like columns. From my experience, fragment environment solves them."
  },
  {
    "objectID": "blog/2022/12/27/quarto_tips/index.html#plots",
    "href": "blog/2022/12/27/quarto_tips/index.html#plots",
    "title": "Some Quarto Tips for Academic Presentation",
    "section": "Plots",
    "text": "Plots\n\nTheme\nMinimizing elements is a starting point of slide design. For that purpose, it is important to use the same fonts and colors for figures (and tables) as the slides. This is the reason why I used to use xaringanthemer, which automatically generates the ggplot2 theme corresponding to the slides’ theme. Unfortunately, there have been no packages for Quarto slides (as far as I know), I declare this theme_quarto() function.\n\n\nCode\nblend_colors &lt;- function(x, y, alpha = 0.5) {\n  x &lt;- colorspace::hex2RGB(x)\n  y &lt;- colorspace::hex2RGB(y)\n  z &lt;- colorspace::mixcolor(alpha, x, y)\n  colorspace::hex(z)\n}\ncolor_blender &lt;- function(x, y) function(alpha = 0.5) blend_colors(x, y, alpha)\ntheme_quarto &lt;- function (\n    text_color = color_text,\n    background_color = color_bg,\n    text_font = font_text,\n    text_font_size = 30,\n    accent_color = color_base,\n    title_font = font_title,\n    title_font_size = 30\n){\n    blend &lt;- color_blender(text_color, background_color)\n    ggplot2::theme(\n        line = ggplot2::element_line(color = blend(0.2)),\n        rect = ggplot2::element_rect(fill = background_color),\n        title = ggplot2::element_text(\n            color = accent_color,\n            family = title_font,\n            size = title_font_size\n        ),\n        plot.background = ggplot2::element_rect(\n            fill = background_color,\n            color = background_color\n        ),\n        panel.background = ggplot2::element_rect(\n            fill = background_color,\n            color = background_color\n        ),\n        panel.grid.major = ggplot2::element_line(\n            color = blend(0.8),\n            inherit.blank = TRUE\n        ),\n        panel.grid.minor = ggplot2::element_line(\n            color = blend(0.9),\n            inherit.blank = TRUE\n        ),\n        axis.title = ggplot2::element_text(size = title_font_size * 0.8),\n        axis.ticks = ggplot2::element_line(color = blend(0.8)),\n        axis.text = ggplot2::element_text(color = blend(0.4), size = title_font_size * 0.7),\n        legend.key = ggplot2::element_rect(fill = \"transparent\", colour = NA),\n        legend.text = ggplot2::element_text(size = title_font_size * 0.8, family = title_font),\n        plot.caption = ggplot2::element_text(\n            size = text_font_size * 0.8,\n            color = blend(0.3)\n        )\n    )\n}\n\n\nWhile the original xaringanthemer::theme_xaringan() redefines the primary color of ggplot2::geom_* by ggplot2::update_geom_defaults, my function does not. I did not overwrite it because color palettes must be specified manually for 2+ color cases, anyway. You can use it like:\n\ncolor_base &lt;- \"#1C5253\"\ntb_hoge |&gt;\n  ggplot(aes(x, y)) +\n  geom_point(color = color_base) +\n  theme_quarto()\n\n\n\nHighlighting\nThe most famous way to highlight plots should be gghighlight. You can proceed with your stories smoothly and clearly by\n\n\n\nFirst Slide\n\np &lt;- tb_hoge |&gt;\n  ggplot(aes(x, y)) +\n  geom_col(color = color_base) +\n  theme_quarto()\n\np\n\n\n\n\n\nSecond Slide\n\np + gghighlight(x == \"Japan\")"
  },
  {
    "objectID": "blog/2022/12/27/quarto_tips/index.html#tables",
    "href": "blog/2022/12/27/quarto_tips/index.html#tables",
    "title": "Some Quarto Tips for Academic Presentation",
    "section": "Tables",
    "text": "Tables\n\nmarkdown vs. kableExtra vs. gt?\nI think they are three popular ways to create tables in HTML slides. while each of them has pros and cons, I am using gt because\nMarkdown Table\n\nNo highlighting\nNo multirow nor multicol from \\(\\LaTeX\\)\n\nkableExtra\n\nSyntax is a little more complicated than gt (e.g., need to mutate a string column for percentages.)\nHighlighting is slightly more complicated than gt\n\nNote that I use kableExtra for tables in an article due to the following problem.\n\n\nProblems with Mathematic Expressions\nUnfortunately, it is difficult to use mathematical expressions in a table in Quarto. gt does not support \\(\\LaTeX\\) notation.2 Also, mathematical expressions of kableExtra are not rendered in Quarto (GitHub Issue). You can solve it by\nkableExtra::kbl(data, format=\"markdown\")\nbut it contains the abovementioned disadvantages of markdown tables.\nThen, I compromise by using\n\nUnicode Greek letters (θ, τ, δ, etc.)\nHTML tags (&lt;sup&gt; and &lt;sub&gt;)\n\nand evaluating them by gt::fmt_markdown(). Mathematical expressions in tables are usually simple, so I don’t have any problems so far.\n\ntibble(a = c(\"θ = 0\", \"τ&lt;sup&gt;δ-1&lt;/sup&gt;\")) |&gt;\n  gt() |&gt;\n  fmt_markdown(columns = everything())\n\n\n\nHighlighting\nThe gt package itself can also highlight cells in a table with the function tab_style(). However, this requires redundant writing, so gtExtras::gt_highlight_rows() and gtExtras::gt_highlight_cols() are useful if you want to highlight row/column-wise."
  },
  {
    "objectID": "blog/2022/12/27/quarto_tips/index.html#export",
    "href": "blog/2022/12/27/quarto_tips/index.html#export",
    "title": "Some Quarto Tips for Academic Presentation",
    "section": "Export",
    "text": "Export\n\nHTML or PDF?\nAlthough I think you use a prepared PC for your presentation, since it is difficult to imagine a PC without a browser, the HTML format is also acceptable. If you write the following in the YAML header, only one self-contained HTML file will be output. So you can easily carry it around like a PDF file.3\nformat:\n  revealjs:\n    standalone: true\n    embed-resources: true\nHowever, you will be asked to submit your slides in PDF format in various situations. And whether or not you actually present your presentation in PDF format, it is a good idea to have PDF slides on hand for insurance purposes.\n\nOpen the HTML file in your browser and press E\nClick “Print” on the browser, then “Save as PDF”\n\nIf you want to separate fragments, specify pdf-separate-fragments: true in YAML.\n\n\nProblems with Hyperlink\nA hyperlink that jumps to each slide is essentially a reference to an &lt;h2&gt; tag, so the link can be written as:\n## A Slide {#sec-slide}\n\n&lt;a href=\"#/sec-detail\"&gt;detail↗&lt;/a&gt;\n\n## A Detail Slide {#sec-detail}\n\n&lt;a href=\"#/sec-slide\"&gt;↩︎&lt;/a&gt;\nHowever, as far as I know, the link is not reflected in the above PDF output. If anyone knows a solution to this problem, I would appreciate it if you could let me know."
  },
  {
    "objectID": "blog/2022/12/27/quarto_tips/index.html#fin.",
    "href": "blog/2022/12/27/quarto_tips/index.html#fin.",
    "title": "Some Quarto Tips for Academic Presentation",
    "section": "Fin.",
    "text": "Fin.\nThese are some of my ideas for using Quarto for academic presentations. I think that Quarto’s slides are quite suitable for academic presentations, because of their simple syntax, high degree of freedom in design, and high maintainability in numbers. I hope this is useful for you."
  },
  {
    "objectID": "blog/2022/12/27/quarto_tips/index.html#are-you-a-beamer-fan",
    "href": "blog/2022/12/27/quarto_tips/index.html#are-you-a-beamer-fan",
    "title": "Some Quarto Tips for Academic Presentation",
    "section": "",
    "text": "The other day, I used slides made with Quarto in a presentation at a conference. In the Economics community, 98% of people use Beamer of \\(\\LaTeX\\), and about 2% use PowerPoint for their presentations. I personally don’t like Beamer’s design, and I think PowerPoint has a problem with maintainability (i.e., can it be easily changed) in case of ongoing projects. I like Quarto for the following reasons:\n\nReasonably good design. And highly customizable.\nTime saving. Slides are written in the markdown notation, so you can make it with the same amount of effort as Beamer (unless you care about the design😉)\nEasily maintainable. Variables can be used in the text, so the numbers are automatically updated even if the model or analysis is slightly changed.\n\nHere, I write some tips on Quarto for academic presentations. For the basic slide creation in Quarto, please refer to the official documentation or Tom Mock’s slides at the RStudio conference. The slides used at the conference presentation are not yet ready for public release, so I prepare these example slides\n\n Slides    PDF    Code"
  },
  {
    "objectID": "talks/index.html#section-2",
    "href": "talks/index.html#section-2",
    "title": "Talks that Last",
    "section": "2021",
    "text": "2021\n\n\n    \n        \n            \n        \n        \n            \n                Git & GitHub Workshop \n            \n            \n                September 24, 2021 ∙ \n                CEMFI\n            \n            Here is a talk I gave on managing codes and data by using GitHub and DVC for economists\n            \n                \n                    \n                         Slides\n                    \n                \n                \n                    \n                         GitHub\n                    \n                \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "research/working-papers/static-norm/index.html",
    "href": "research/working-papers/static-norm/index.html",
    "title": "Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan",
    "section": "",
    "text": "Paper (will be uploaded soon)\nSlides (SAEe2022)\nPDF Slides (SAEe2022)"
  },
  {
    "objectID": "research/working-papers/static-norm/index.html#abstract",
    "href": "research/working-papers/static-norm/index.html#abstract",
    "title": "Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan",
    "section": "Abstract",
    "text": "Abstract\nJapan ranks 116th out of 146 countries in the World Economic Forum’s Global Gender Gap Index 2022, well below many developing countries, and has one of the largest gender pay gaps among high-income countries. On the other hand, women’s labor force participation is high in Japan. However, women are much more likely to work in non-regular jobs, which are associated with lower wages and fewer hours. Men, in contrast, have regular, higher-paid jobs with long-hours requirements. In this paper, I build and estimate a model in which couples jointly decide their occupations and working hours. Occupations differ in their flexibility. Regular ones require long working hours, and hourly wages are convex functions of hours worked. Non-regular occupations have a linear mapping between hours worked and hourly wages. The model also allows for social norms that penalize women who earn more than their husbands. Given the inflexibility of regular jobs and social norms, women are more likely to choose non-regular jobs or not to work, and allocate a larger share of their hours for home production for their households. The model can account for all the observed gender gaps in labor force participation, 33% in occupational choices, 74% in labor hours, and 34% in wages. Through the lens of the model, the inflexibility of regular jobs explains almost all the gaps in occupational choices and wages, while social norms that penalize women who earn more than their husbands account for all the gap in the participation rate and half of the gap in hours worked."
  },
  {
    "objectID": "research/working-papers/static-norm/index.html#important-figure",
    "href": "research/working-papers/static-norm/index.html#important-figure",
    "title": "Time Allocations, Social Norms, and Gender Gaps",
    "section": "Important figure",
    "text": "Important figure\nFigure 5: Derogation decisions across pandemic violations and pandemic backsliding\n\n\n\nFigure 5: Derogation decisions across pandemic violations and pandemic backsliding"
  },
  {
    "objectID": "research/working-papers/static-norm/index.html#bibtex-citation",
    "href": "research/working-papers/static-norm/index.html#bibtex-citation",
    "title": "Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan",
    "section": "BibTeX citation",
    "text": "BibTeX citation\n@unpublished{Yanagimoto:2023,\n    Author = {Kazuharu Yanagimoto},\n    Note = {Working paper},\n    Title = {Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan},\n    Year = {2023}}"
  },
  {
    "objectID": "research/index.html",
    "href": "research/index.html",
    "title": "Research ",
    "section": "",
    "text": "Why not Choose a Better Job?\n                \n                \n                    Flexibility, Social Norms, and Gender Gaps in Japan\n                \n                \n                    \n                        Gender Gaps\n                    \n                    \n                        Social Norms\n                    \n                    \n                        Japan\n                    \n                \n                \n                        \n                            \n                                 Working Paper\n                            \n                        \n                        \n                            \n                                 Slides (SEHO2023)\n                            \n                        \n                \n            \n        \n\n\nNo matching items"
  },
  {
    "objectID": "research/working-papers/static-norm/index.html#important-table-figure",
    "href": "research/working-papers/static-norm/index.html#important-table-figure",
    "title": "Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan",
    "section": "Important table & figure",
    "text": "Important table & figure"
  },
  {
    "objectID": "research/work-in-progress/hetero2wfe/index.html#abstract",
    "href": "research/work-in-progress/hetero2wfe/index.html#abstract",
    "title": "Heterogenous Child Penalties",
    "section": "Abstract",
    "text": "Abstract"
  },
  {
    "objectID": "research/work-in-progress/hetero2wfe/index.html#important-table-figure",
    "href": "research/work-in-progress/hetero2wfe/index.html#important-table-figure",
    "title": "Heterogenous Child Penalties",
    "section": "Important table & figure",
    "text": "Important table & figure"
  },
  {
    "objectID": "research/index.html#work-in-progress",
    "href": "research/index.html#work-in-progress",
    "title": "Research ",
    "section": "WORK IN PROGRESS",
    "text": "WORK IN PROGRESS\n\n\n        \n            \n                \n                        Estimating Individual-level Child-penalties for (Improved) Childcare Policy Evaluation\n                \n                \n                \n                \n                    \n                        Two-way Fixed Effects\n                    \n                    \n                        Child Penalty\n                    \n                    \n                        Gender Gaps\n                    \n                \n                \n                    with Dmitry Arkhangelsky and Tom Zohar\n                \n                \n                \n            \n        \n\n\nNo matching items"
  },
  {
    "objectID": "research/index.html#working-papers",
    "href": "research/index.html#working-papers",
    "title": "Research ",
    "section": "",
    "text": "Why not Choose a Better Job?\n                \n                \n                    Flexibility, Social Norms, and Gender Gaps in Japan\n                \n                \n                    \n                        Gender Gaps\n                    \n                    \n                        Social Norms\n                    \n                    \n                        Japan\n                    \n                \n                \n                        \n                            \n                                 Working Paper\n                            \n                        \n                        \n                            \n                                 Slides (SEHO2023)\n                            \n                        \n                \n            \n        \n\n\nNo matching items"
  },
  {
    "objectID": "about/index.html#selected-papers",
    "href": "about/index.html#selected-papers",
    "title": "Hi There!",
    "section": "Selected Papers",
    "text": "Selected Papers"
  },
  {
    "objectID": "about/index.html#working-papers",
    "href": "about/index.html#working-papers",
    "title": "Hi There!",
    "section": "WORKING PAPERS",
    "text": "WORKING PAPERS\n\n\n            \n                \n                    \n                            Why not Choose a Better Job?\n                    \n                    \n                        Flexibility, Social Norms, and Gender Gaps in Japan\n                    \n                    \n                        \n                            Gender Gaps\n                        \n                        \n                            Social Norms\n                        \n                        \n                            Japan\n                        \n                    \n                    \n                            \n                                \n                                     Working Paper\n                                \n                            \n                            \n                                \n                                     Slides (SEHO2023)\n                                \n                            \n                    \n                \n            \n\n\nNo matching items\n\n\n\nSee All →"
  },
  {
    "objectID": "research/index.html#work-in-prgress",
    "href": "research/index.html#work-in-prgress",
    "title": "Research",
    "section": "WORK IN PRGRESS",
    "text": "WORK IN PRGRESS\n\n\n    \n        \n            \n                    Heterogenous Child Penalties\n            \n            \n                \n                    Two-way Fixed Effects\n                \n                \n                    Child Penalty\n                \n                \n                    Gender Gaps\n                \n            \n            \n                with Dmitry Arkhangelsky and Tom Zohar\n            \n            \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "research/index.html#work-in-progress-fa-regular-spinner",
    "href": "research/index.html#work-in-progress-fa-regular-spinner",
    "title": "Research",
    "section": "WORK IN PROGRESS ",
    "text": "WORK IN PROGRESS \n\n\n    \n        \n            \n                    Heterogenous Child Penalties\n            \n            \n                \n                    Two-way Fixed Effects\n                \n                \n                    Child Penalty\n                \n                \n                    Gender Gaps\n                \n            \n            \n                with Dmitry Arkhangelsky and Tom Zohar\n            \n            \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "research/index.html#work-in-progress-fa-regular-copyright",
    "href": "research/index.html#work-in-progress-fa-regular-copyright",
    "title": "Research",
    "section": "WORK IN PROGRESS ",
    "text": "WORK IN PROGRESS \n\n\n    \n        \n            \n                    Heterogenous Child Penalties\n            \n            \n                \n                    Two-way Fixed Effects\n                \n                \n                    Child Penalty\n                \n                \n                    Gender Gaps\n                \n            \n            \n                with Dmitry Arkhangelsky and Tom Zohar\n            \n            \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "research/index.html#work-in-progress-fas-spinner",
    "href": "research/index.html#work-in-progress-fas-spinner",
    "title": "Research",
    "section": "WORK IN PROGRESS ",
    "text": "WORK IN PROGRESS \n\n\n    \n        \n            \n                    Heterogenous Child Penalties\n            \n            \n                \n                    Two-way Fixed Effects\n                \n                \n                    Child Penalty\n                \n                \n                    Gender Gaps\n                \n            \n            \n                with Dmitry Arkhangelsky and Tom Zohar\n            \n            \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "research/index.html#work-in-progress-fa-spinner",
    "href": "research/index.html#work-in-progress-fa-spinner",
    "title": "Research",
    "section": "WORK IN PROGRESS ",
    "text": "WORK IN PROGRESS \n\n\n    \n        \n            \n                    Heterogenous Child Penalties\n            \n            \n                \n                    Two-way Fixed Effects\n                \n                \n                    Child Penalty\n                \n                \n                    Gender Gaps\n                \n            \n            \n                with Dmitry Arkhangelsky and Tom Zohar\n            \n            \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "research/index.html#fa-spinner-work-in-progress",
    "href": "research/index.html#fa-spinner-work-in-progress",
    "title": "Research",
    "section": " WORK IN PROGRESS",
    "text": "WORK IN PROGRESS\n\n\n    \n        \n            \n                    Heterogenous Child Penalties\n            \n            \n                \n                    Two-way Fixed Effects\n                \n                \n                    Child Penalty\n                \n                \n                    Gender Gaps\n                \n            \n            \n                with Dmitry Arkhangelsky and Tom Zohar\n            \n            \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "blog/index.html#section",
    "href": "blog/index.html#section",
    "title": "Blog",
    "section": "",
    "text": "September 6, 2023\n        \n        \n            A Minimal & Portable Research Environment with Docker\n            \n                \n                    R\n                \n                \n                    Docker\n                \n                \n                    VSCode\n                \n                \n                    Julia\n                \n                \n                    LaTeX\n                \n                \n                    Python\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            June 10, 2023\n        \n        \n            Scientific Communication with Quarto: Economic Models\n            \n                \n                    Julia\n                \n                \n                    Observable JS\n                \n                \n                    Quarto\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            April 30, 2023\n        \n        \n            Quarto Is Multi-lingual!\n            \n                \n                    Julia\n                \n                \n                    Python\n                \n                \n                    R\n                \n                \n                    Quarto\n                \n                \n                    Stata\n                \n            \n            \n        \n        \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "blog/index.html#section-1",
    "href": "blog/index.html#section-1",
    "title": "Blog",
    "section": "2022",
    "text": "2022\n\n\n    \n                  \n            December 28, 2022\n        \n        \n            Some Quarto Tips for Academic Presentation\n            \n                \n                    R\n                \n                \n                    Quarto\n                \n            \n            \n        \n        \n            \n        \n    \n    \n                  \n            May 24, 2022\n        \n        \n            My Docker Template for R\n            \n                \n                    R\n                \n                \n                    Docker\n                \n            \n            \n        \n        \n            \n        \n    \n\n\nNo matching items"
  },
  {
    "objectID": "blog/2022/12/27/quarto_tips/index.html#footnotes",
    "href": "blog/2022/12/27/quarto_tips/index.html#footnotes",
    "title": "Some Quarto Tips for Academic Presentation",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n In economics, changing the age group of the sample or the parameters of the model sometimes lead to changes in the results. In addition, we sometimes found mistakes in cleaning the data.↩︎\n This issue has been raised in 2019, but it does not seem to be solved quickly.↩︎\n The option self-contained: true produces a deprecated warning.↩︎"
  },
  {
    "objectID": "blog/2023/04/30/quarto_multi_lang/index.html",
    "href": "blog/2023/04/30/quarto_multi_lang/index.html",
    "title": "Quarto Is Multi-lingual!",
    "section": "",
    "text": "A common misunderstanding about Quarto is that we cannot use multiple languages within a document. Indeed, Jupyter cannot use multiple languages within a document, and we usually use the jupyter engine for Python and Julia (and it is officially supported.)\nHowever, knitr has already been able to execute multiple languages tons of years ago, so why can’t we do it in Quarto?\nLet’s see the following example with palmerpenguins::penguins of Horst, Hill, and Gorman (2020)"
  },
  {
    "objectID": "blog/2023/04/30/quarto_multi_lang/index.html#tabset",
    "href": "blog/2023/04/30/quarto_multi_lang/index.html#tabset",
    "title": "Quarto Is Multi-lingual!",
    "section": "Tabset",
    "text": "Tabset\nI think, one of the most useful case is when you want to support multiple source codes in a textbook or lecture notes. Quato supports Tabset layout and it’s so smart!\n\nRPythonJuliaStata\n\n\n\npenguins |&gt;\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g,\n             color = species, shape = species)) +\n  geom_point(size = 3) +\n  scale_color_manual(values = c(\"darkorange\",\"purple\",\"cyan4\")) +\n  labs(x = \"Flipper Length (mm)\", y = \"Body Mass (g)\", color = NULL, shape = NULL) +\n  theme_minimal() +\n  theme(legend.position = c(0.9, 0.1),\n        panel.grid.major = element_blank())\n\n\n\n\n\n\n\n\n\n\n\nplt.clf()\n\nsns.scatterplot(data=penguins, x='flipper_length_mm', y='body_mass_g',\n                hue='species', style=\"species\",\n                palette=['#FF8C00', '#159090', '#A034F0'])\n\nplt.xlabel('Flipper Length (mm)')\nplt.ylabel('Body Mass (g)')\nplt.legend(title = \"\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n@df penguins scatter(\n  :flipper_length_mm,\n  :body_mass_g,\n  group = :species,\n  markersize = 5,\n  markershape = [:circle :utriangle :rect ],\n  markerstrokecolor = :white,\n  palette = [\"#FF8C00\", \"#159090\", \"#A034F0\"],\n  xaxis = \"Flipper Length (mm)\",\n  yaxis = \"Body Mass (g)\",\n  size = (480, 320),\n  dpi = 300,\n  legendfontsize = 8,\n  tickfontsize = 6,\n  guidefontsize = 10,\n  margin=Plots.Measures.Length(:mm, 2.0)\n)\n\n\n\n\n\n\n\nuse data/palmerpenguins, clear\n\nseparate body_mass_g, by(species)\ntwoway scatter body_mass_g? flipper_length_mm, ///\n   mcolor(orange emerald purple) mlab(\"\") ///\n   msymbol(O T S) ///\n   xtitle(\"Flipper Length (mm)\") ytitle(\"Body Mass (g)\") ///\n   legend(order(1 \"Adelie\" 2 \"Chinstrap\" 3 \"Gentoo\") pos(11) ring(0) col(1)) ///\n   plotregion(fcolor(white)) graphregion(fcolor(white))\nqui graph export \"figure/stata/scatter.svg\", replace\n\n\n\n\n\n\n\n\n\nHave a happy Quarto life 🥂!"
  },
  {
    "objectID": "research/working-papers/static-norm/index.html#important-links",
    "href": "research/working-papers/static-norm/index.html#important-links",
    "title": "Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan",
    "section": "",
    "text": "Paper (will be uploaded soon)\nSlides (SAEe2022)\nPDF Slides (SAEe2022)"
  },
  {
    "objectID": "research/working-papers/common-cheetah/index.html",
    "href": "research/working-papers/common-cheetah/index.html",
    "title": "Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan",
    "section": "",
    "text": "Paper (will be uploaded soon)\nSlides (SAEe2022)\nPDF Slides (SAEe2022)"
  },
  {
    "objectID": "research/working-papers/common-cheetah/index.html#important-links",
    "href": "research/working-papers/common-cheetah/index.html#important-links",
    "title": "Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan",
    "section": "",
    "text": "Paper (will be uploaded soon)\nSlides (SAEe2022)\nPDF Slides (SAEe2022)"
  },
  {
    "objectID": "research/working-papers/common-cheetah/index.html#abstract",
    "href": "research/working-papers/common-cheetah/index.html#abstract",
    "title": "Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan",
    "section": "Abstract",
    "text": "Abstract\nJapan ranks 116th out of 146 countries in the World Economic Forum’s Global Gender Gap Index 2022, well below many developing countries, and has one of the largest gender pay gaps among high-income countries. On the other hand, women’s labor force participation is high in Japan. However, women are much more likely to work in non-regular jobs, which are associated with lower wages and fewer hours. Men, in contrast, have regular, higher-paid jobs with long-hours requirements. In this paper, I build and estimate a model in which couples jointly decide their occupations and working hours. Occupations differ in their flexibility. Regular ones require long working hours, and hourly wages are convex functions of hours worked. Non-regular occupations have a linear mapping between hours worked and hourly wages. The model also allows for social norms that penalize women who earn more than their husbands. Given the inflexibility of regular jobs and social norms, women are more likely to choose non-regular jobs or not to work, and allocate a larger share of their hours for home production for their households. The model can account for all the observed gender gaps in labor force participation, 33% in occupational choices, 74% in labor hours, and 34% in wages. Through the lens of the model, the inflexibility of regular jobs explains almost all the gaps in occupational choices and wages, while social norms that penalize women who earn more than their husbands account for all the gap in the participation rate and half of the gap in hours worked."
  },
  {
    "objectID": "research/working-papers/common-cheetah/index.html#bibtex-citation",
    "href": "research/working-papers/common-cheetah/index.html#bibtex-citation",
    "title": "Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan",
    "section": "BibTeX citation",
    "text": "BibTeX citation\n@unpublished{Yanagimoto:2023,\n    Author = {Kazuharu Yanagimoto},\n    Note = {Working paper},\n    Title = {Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan},\n    Year = {2023}}"
  },
  {
    "objectID": "research/common-cheetah/index.html",
    "href": "research/common-cheetah/index.html",
    "title": "Why not Choose a Better Job?",
    "section": "",
    "text": "Working Paper    Slides (SEHO2023)"
  },
  {
    "objectID": "research/common-cheetah/index.html#abstract",
    "href": "research/common-cheetah/index.html#abstract",
    "title": "Why not Choose a Better Job?",
    "section": "Abstract",
    "text": "Abstract\nJapan ranks 116th out of 146 countries in the World Economic Forum’s Global Gender Gap Index 2022, well below many developing countries, and has one of the largest gender pay gaps among high-income countries. On the other hand, women’s labor force participation is high in Japan. However, women are much more likely to work in non-regular jobs, which are associated with lower wages and fewer hours. Men, in contrast, have regular, higher-paid jobs with long-hours requirements. In this paper, I build and estimate a model in which couples jointly decide their occupations and working hours. Occupations differ in their flexibility. Regular ones require long working hours, and hourly wages are a convex function of hours worked. Non-regular occupations have a linear mapping between hours worked and hourly wages. The model also allows for social norms that penalize women who earn more than their husbands. Given the inflexibility of regular jobs and social norms, women are more likely to choose non-regular jobs or not to work, and allocate a larger share of their hours for home production. The model can account for all the observed gender gaps in labor force participation, 33% in occupational choices, 74% in labor hours, and 34% in wages. Through the lens of the model, the inflexibility of regular jobs explains almost all the gaps in occupational choices and wages, while social norms that penalize women who earn more than their husbands account for all the gap in the participation rate and half of the gap in hours worked."
  },
  {
    "objectID": "research/common-cheetah/index.html#bibtex-citation",
    "href": "research/common-cheetah/index.html#bibtex-citation",
    "title": "Why not Choose a Better Job?",
    "section": "BibTeX citation",
    "text": "BibTeX citation\n@unpublished{Yanagimoto:2023,\n    Author = {Kazuharu Yanagimoto},\n    Note = {Working paper},\n    Title = {Why not Choose a Better Job? Flexibility, Social Norms, and Gender Gaps in Japan},\n    Year = {2023}}"
  },
  {
    "objectID": "research/hetero2wfe/index.html#abstract",
    "href": "research/hetero2wfe/index.html#abstract",
    "title": "Estimating Individual-level Child-penalties for (Improved) Childcare Policy Evaluation",
    "section": "Abstract",
    "text": "Abstract"
  },
  {
    "objectID": "research/hetero2wfe/index.html#important-table-figure",
    "href": "research/hetero2wfe/index.html#important-table-figure",
    "title": "Estimating Individual-level Child-penalties for (Improved) Childcare Policy Evaluation",
    "section": "Important table & figure",
    "text": "Important table & figure"
  },
  {
    "objectID": "research/common-cheetah/index.html#important-links",
    "href": "research/common-cheetah/index.html#important-links",
    "title": "Why not Choose a Better Job?",
    "section": "Important links",
    "text": "Important links\n\nPaper (will be uploaded soon)\nSlides (SAEe2022)\nPDF Slides (SAEe2022)"
  },
  {
    "objectID": "blog/2023/06/02/quarto_com_model/index.html",
    "href": "blog/2023/06/02/quarto_com_model/index.html",
    "title": "Quarto Communication for Economic Models",
    "section": "",
    "text": "For \\(t = 1, \\dots, T\\), households solve \\[\nV(t, e, x) = \\max_{c, x'} \\frac{c^{1 - \\sigma}}{1 - \\sigma} + \\beta \\mathbb{E}V(t + 1, e', x')\n\\] \\[\n\\begin{aligned}\nc + x' &\\le (1 + r)x + ew \\\\\n\\text{Pr}(e' | e) &= \\Gamma(e) \\\\\nc, x' &\\ge 0\n\\end{aligned}\n\\]\nusing Parameters\nusing QuantEcon\nusing Plots\nusing LaTeXStrings\nusing CSV\nusing DataFrames\n@with_kw struct Model\n    \n    # Grid for x\n    nₓ::Int = 30\n    x̲::Float64 = 0.1\n    x̄::Float64 = 4.0\n    x_grid::Vector{Float64} = range(start = x̲, stop = x̄, length = nₓ)\n    \n    # Grid for e: parameters for Tauchen\n    nₑ::Int = 10\n    σ_ε::Float64 = 0.02058\n    λ_ε::Float64 = 0.99\n    m::Float64 = 1.5\n    mc::MarkovChain = tauchen(nₑ, λ_ε, σ_ε, 0.0, m)\n    e_grid::Vector{Float64} = exp.(mc.state_values)\n    P::Matrix{Float64} = mc.p\n\n    # Utility function\n    σ::Float64 = 2.0\n    β::Float64 = 0.97\n    T::Int = 10\n\n    # Prices\n    r::Float64 = 0.07\n    w::Float64 = 5.0\n    \nend\n\nu(c, m::Model) = isone(m.σ) ? log(c) : c^(1 - m.σ) / (1 - m.σ);\nfunction solve(m::Model)\n\n    @unpack T, nₓ, nₑ, r, w, β, P, x_grid, e_grid = m\n\n    V = zeros(nₓ, nₑ, T)\n\n    for t = T:-1:1, iₓ= 1:nₓ, iₑ = 1:nₑ\n        \n        utility = -Inf\n        for iₓ′ = 1:nₓ\n            \n            expected = (t == T) ? 0.0 : \n                sum(P[iₑ, iₑ′] * V[iₓ′, iₑ′, t+1] for iₑ′ = 1:nₑ)\n            c = (1 + r) * x_grid[iₓ] + e_grid[iₑ] * w - x_grid[iₓ′]\n            \n            if c &gt; 0\n                utility = max(u(c, m) + β * expected, utility)\n            end\n    \n        end\n    \n        V[iₓ, iₑ, t] = utility\n    end\n\n    return V\nend\n\nsolve (generic function with 1 method)\nm = Model()\nV = solve(m);\nps = []\n\ny̲, ȳ = minimum(V) * 1.1, maximum(V) + 0.1\nfor (i, t) ∈ enumerate([1, 4, 7, 10])\n    \n    p = plot(m.x_grid, V[:, 1, t], \n        xlabel = \"x\",\n        ylims = (y̲, ȳ),\n        label = L\"e_1\", \n        legend = :bottomright, \n        title = \"t = $t\")\n    plot!(m.x_grid, V[:, 5, t], label = L\"e_5\")\n    plot!(m.x_grid, V[:, 10, t], label = L\"e_{10}\")\n    push!(ps, p)\nend\n\nplot(ps...)"
  },
  {
    "objectID": "blog/2023/06/02/quarto_com_model/test.html",
    "href": "blog/2023/06/02/quarto_com_model/test.html",
    "title": "Kazuharu Yanagimoto",
    "section": "",
    "text": "using Plots"
  },
  {
    "objectID": "blog/2023/06/02/quarto_com_model/index.html#gif",
    "href": "blog/2023/06/02/quarto_com_model/index.html#gif",
    "title": "Quarto Communication for Economic Models",
    "section": "GIF",
    "text": "GIF\n\nanim = @animate for t = 1:10\n    plot(m.x_grid, V[:, 1, t], \n        xlabel = \"x\",\n        ylims = (y̲, ȳ),\n        label = L\"e_1\", \n        legend = :bottomright, \n        title = \"t = $t\")\n    plot!(m.x_grid, V[:, 5, t], label = L\"e_5\")\n    plot!(m.x_grid, V[:, 10, t], label = L\"e_{10}\")\nend\n\ngif(anim, tempname() * \".gif\", fps = 1)"
  },
  {
    "objectID": "blog/2023/06/02/quarto_com_model/index.html#observable-js",
    "href": "blog/2023/06/02/quarto_com_model/index.html#observable-js",
    "title": "Quarto Communication for Economic Models",
    "section": "Observable JS",
    "text": "Observable JS\n\nfunction solve_partial(r, w)\n    m = Model(r = r, w = w)\n    V = solve(m)\n    return [\n        (x = x, ie = iₑ, t = t, V = V[iₓ, iₑ, t], r = m.r, w = m.w)\n        for (iₓ, x) ∈ enumerate(m.x_grid)\n        for (iₑ, e) ∈ enumerate(m.e_grid) if iₑ ∈ [1, 5, 10]\n        for t ∈ 1:m.T\n    ]\nend\n\nsolve_partial (generic function with 1 method)\n\n\n\nres = Iterators.flatten([solve_partial(r, w) for r ∈ 0.01:0.02:0.15 for w ∈ 1.0:0.5:10.0])\ndf = DataFrame(res)\nd = Dict(1 =&gt; \"e₁\", 5 =&gt; \"e₅\", 10 =&gt; \"e₁₀\")\ndf.lbl = [d[i] for i in df.ie]\nCSV.write(\"data.csv\", df);\n\n\nviewof t = Inputs.range(\n  [1, 10], \n  {value: 1, step: 1, label: \"t\"}\n)\nviewof r = Inputs.range(\n  [0.01, 0.15], \n  {value: 0.07, step: 0.02, label: \"r\"}\n)\nviewof w = Inputs.range(\n  [1.0, 10.0], \n  {value: 5.0, step: 0.5, label: \"w\"}\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndata = FileAttachment(\"data.csv\").csv()\nfiltered = data.filter(function(sim) {\n    return sim.r == r && sim.w == w && sim.t == t\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlot.plot({\n    marginLeft: 50,\n    height: 400,\n    color: {domain: [\"e₁\", \"e₅\", \"e₁₀\"], legend: true},\n    x: {domain: [0.0, 4.0]},\n    y: {domain: [-2.2, 0.0]},\n    marks: [\n        Plot.lineY(filtered, {x: \"x\", y: \"V\", stroke: \"lbl\"}),\n    ]\n})"
  },
  {
    "objectID": "blog/2023/06/02/quarto_com_model/index.html#plotly-js",
    "href": "blog/2023/06/02/quarto_com_model/index.html#plotly-js",
    "title": "Quarto Communication for Economic Models",
    "section": "Plotly JS",
    "text": "Plotly JS\n\nplotlyjs()\n\n\nThe WebIO Jupyter extension was not detected. See the\n\n    WebIO Jupyter integration documentation\n\nfor more information.\n\n\n\nPlots.PlotlyJSBackend()"
  },
  {
    "objectID": "blog/2023/06/10/quarto_com_model/index.html",
    "href": "blog/2023/06/10/quarto_com_model/index.html",
    "title": "Scientific Communication with Quarto: Economic Models",
    "section": "",
    "text": "Notebook coding (Jupyter, Rmarkdown, and Quarto) has gotten popular in the last decade. It allows us to tell a story with code and data, and it makes scientific communication more transparent and reproducible. I use Quarto to share my current results with my supervisor and coauthors, especially when I am in the playground stage of the project.\nWhile it is naturally useful in that it is an easy tool for creating reports, exploiting its HTML feature, we can enrich communication even further. Here, I introduce my use case of GIF and Observable JS for economic models with Julia.\nImagine that you are working on a very simple life-cycle model:\nFor \\(t = 1, \\dots, T\\), households solve \\[\nV(t, e, x) = \\max_{c, x'} \\frac{c^{1 - \\sigma}}{1 - \\sigma} + \\beta \\mathbb{E}V(t + 1, e', x')\n\\] \\[\n\\begin{aligned}\nc + x' &\\le (1 + r)x + ew \\\\\n\\text{Pr}(e' | e) &= \\Gamma(e) \\\\\nc, x' &\\ge 0\n\\end{aligned}\n\\]\nSee the following code for the parameters and the solution algorithm.\n\n\nCode\nusing Parameters\nusing QuantEcon\nusing Plots\nusing LaTeXStrings\nusing CSV\nusing DataFrames\n\n@with_kw struct Model\n    \n    # Grid for x\n    nₓ::Int = 30\n    x̲::Float64 = 0.1\n    x̄::Float64 = 4.0\n    x_grid::Vector{Float64} = range(start = x̲, stop = x̄, length = nₓ)\n    \n    # Grid for e: parameters for Tauchen\n    nₑ::Int = 10\n    σ_ε::Float64 = 0.02058\n    λ_ε::Float64 = 0.99\n    m::Float64 = 1.5\n    mc::MarkovChain = tauchen(nₑ, λ_ε, σ_ε, 0.0, m)\n    e_grid::Vector{Float64} = exp.(mc.state_values)\n    P::Matrix{Float64} = mc.p\n\n    # Utility function\n    σ::Float64 = 2.0\n    β::Float64 = 0.97\n    T::Int = 10\n\n    # Prices\n    r::Float64 = 0.07\n    w::Float64 = 5.0\n    \nend\n\nu(c, m::Model) = isone(m.σ) ? log(c) : c^(1 - m.σ) / (1 - m.σ);\n\nfunction solve(m::Model)\n\n    @unpack T, nₓ, nₑ, r, w, β, P, x_grid, e_grid = m\n\n    V = zeros(nₓ, nₑ, T)\n\n    for t = T:-1:1, iₓ= 1:nₓ, iₑ = 1:nₑ\n        \n        utility = -Inf\n        for iₓ′ = 1:nₓ\n            \n            expected = (t == T) ? 0.0 : \n                sum(P[iₑ, iₑ′] * V[iₓ′, iₑ′, t+1] for iₑ′ = 1:nₑ)\n            c = (1 + r) * x_grid[iₓ] + e_grid[iₑ] * w - x_grid[iₓ′]\n            \n            if c &gt; 0\n                utility = max(u(c, m) + β * expected, utility)\n            end\n    \n        end\n    \n        V[iₓ, iₑ, t] = utility\n    end\n\n    return V\nend\n\nm = Model()\nV = solve(m);\n\n\nA traditional way to show the value function is to plot for selected \\(e\\) and \\(t\\).\n\n\nCode\nps = []\n\ny̲, ȳ = minimum(V) * 1.1, maximum(V) + 0.1\nfor (i, t) ∈ enumerate([1, 4, 7, 10])\n    \n    p = plot(m.x_grid, V[:, 1, t], \n        xlabel = \"x\",\n        ylims = (y̲, ȳ),\n        label = L\"e_1\", \n        legend = :bottomright, \n        title = \"t = $t\")\n    plot!(m.x_grid, V[:, 5, t], label = L\"e_5\")\n    plot!(m.x_grid, V[:, 10, t], label = L\"e_{10}\")\n    push!(ps, p)\nend\n\nplot(ps...)\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis is not bad, however, we can add more information by using GIF."
  },
  {
    "objectID": "blog/2023/06/10/quarto_com_model/index.html#gif",
    "href": "blog/2023/06/10/quarto_com_model/index.html#gif",
    "title": "Scientific Communication with Quarto: Economic Models",
    "section": "GIF",
    "text": "GIF\nWhile this is not so famous, we can create a GIF animation just by adding @animate macro in Julia.\n\n\nCode\nanim = @animate for t = 1:10\n    plot(m.x_grid, V[:, 1, t], \n        xlabel = \"x\",\n        ylims = (y̲, ȳ),\n        label = L\"e_1\", \n        legend = :bottomright, \n        title = \"t = $t\")\n    plot!(m.x_grid, V[:, 5, t], label = L\"e_5\")\n    plot!(m.x_grid, V[:, 10, t], label = L\"e_{10}\")\nend\n\ngif(anim, \"img/anim.gif\", fps = 1)\n\n\n\n\n\nSee? This is very intuitive and informative! But if you are interested in the changes with multiple parameters, you may want to try Observable JS."
  },
  {
    "objectID": "blog/2023/06/10/quarto_com_model/index.html#plotly-js",
    "href": "blog/2023/06/10/quarto_com_model/index.html#plotly-js",
    "title": "Quarto Communication for Economic Models",
    "section": "Plotly JS",
    "text": "Plotly JS\n\nusing PlotlyJS\n\nfunction frame_args(;duration=400, redraw=false) \n    #function to set frame attributes\n    #redraw must be set on true for any other trace type different from scatter\n    attr(\n         frame_duration= duration,\n         mode= \"immediate\",\n         fromcurrent=true,\n         redraw=redraw, \n         transition=attr(duration= duration, easing=\"linear\")\n        )\nend\n\ndf = DataFrame(\n    [(x = x, ie = iₑ, t = t, V = V[iₓ, iₑ, t])\n      for (iₓ, x) ∈ enumerate(m.x_grid) for iₑ ∈ 1:m.nₑ if iₑ ∈ [1, 5, 10] for t ∈ 1:m.T])\ndf1 = df[df.t .== 1, :]\nfig = Plot(df1, kind=\"scatter\", mode=\"lines\", x=:x, y=:V, group=:ie,\n    layout = Layout(title_text = \"t = 1\"))\n\nframes = Vector{PlotlyFrame}(undef, m.T)\nfor t ∈ 1:m.T\n    dft = df[df.t .== t, :]\n    figt = Plot(dft, kind=\"scatter\", mode=\"lines\", x=:x, y=:V, group=:ie,)\n    frames[t] = PlotlyBase.frame(\n        data = [attr(x = figt.data[j].x, y = figt.data[j].y) for j ∈ 1:length([1, 5, 10])],\n        layout = attr(title_text = \"t = $t\"),\n        name = \"frame$t\",\n        traces = [0, 1, 2, 3]\n    )\nend\nfig.frames = frames\nrelayout!(fig,\n    sliders = [\n        attr(active = 0, \n             len = 0.9,\n             pad = attr(b= 10, t= 60),\n             x = 0.1, y = 0,\n             xanchor = \"left\",\n             yanchor = \"top\",\n             steps = [attr(label = \"$t\",\n                            method = \"animate\",\n                            args = [[\"frame$t\"], frame_args(;)]) for t ∈ 1:m.T])],\n    updatemenus = [\n        attr(type= \"buttons\",\n             buttons= [\n                attr(args= [nothing, frame_args(;)], label= \"▶\", method= \"animate\"),\n                attr(args= [[nothing], frame_args(;duration=0)], label= \"◼\", method= \"animate\")],\n            pad = attr(r=10, t=70),\n            direction= \"left\",\n            x = 0.1, y = 0,\n            xanchor= \"right\",\n            yanchor= \"top\"\n        )]\n)\ndisplay(fig)"
  },
  {
    "objectID": "blog/2023/06/10/quarto_com_model/index.html#observable-js",
    "href": "blog/2023/06/10/quarto_com_model/index.html#observable-js",
    "title": "Scientific Communication with Quarto: Economic Models",
    "section": "Observable JS",
    "text": "Observable JS\nObservable is a JavaScript notebook that allows us to create interactive visualizations. It is free and open-source, and we can embed it in our Quarto document. Since the Observable is JavaScript-based, we can put an interactive (dynamic) visualization in static HTML documents!\nFor example, you are now interested in the changes in the value function with \\(r\\) and \\(w\\). To implement it in Observable, we first need to create a CSV file1 that contains the results of the simulation.\n\n\nCode\nfunction solve_partial(r, w)\n    m = Model(r = r, w = w)\n    V = solve(m)\n    return [\n        (x = x, ie = iₑ, t = t, V = V[iₓ, iₑ, t], r = m.r, w = m.w)\n        for (iₓ, x) ∈ enumerate(m.x_grid)\n        for (iₑ, e) ∈ enumerate(m.e_grid) if iₑ ∈ [1, 5, 10]\n        for t ∈ 1:m.T\n    ]\nend\n\nres = Iterators.flatten([solve_partial(r, w) for r ∈ 0.01:0.02:0.15 for w ∈ 2.0:0.5:10.0])\ndf = DataFrame(res)\nd = Dict(1 =&gt; \"e₁\", 5 =&gt; \"e₅\", 10 =&gt; \"e₁₀\")\ndf.lbl = [d[i] for i in df.ie]\nCSV.write(\"data.csv\", df);\n\n\nThis CSV file is then loaded in Observable and filtered by the parameters.2\n\n\nCode\ndata = FileAttachment(\"data.csv\").csv()\nfiltered = data.filter(function(sim) {\n    return sim.r == r && sim.w == w && sim.t == t\n})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding sliders and a plot, we have a cool interactive visualization!\n\n\nCode\nviewof t = Inputs.range(\n  [1, 10], \n  {value: 1, step: 1, label: \"t\"}\n)\nviewof r = Inputs.range(\n  [0.01, 0.15], \n  {value: 0.07, step: 0.02, label: \"r\"}\n)\nviewof w = Inputs.range(\n  [2.0, 10.0], \n  {value: 5.0, step: 0.5, label: \"w\"}\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nPlot.plot({\n    marginLeft: 50,\n    height: 400,\n    color: {domain: [\"e₁\", \"e₅\", \"e₁₀\"], legend: true},\n    x: {domain: [0.0, 4.0]},\n    y: {domain: [-5.5, 0.0]},\n    marks: [\n        Plot.lineY(filtered, {x: \"x\", y: \"V\", stroke: \"lbl\"}),\n    ]\n})\n\n\n\n\n\n\n\nHappy Quarto life 🥂!"
  },
  {
    "objectID": "blog/2023/06/10/quarto_com_model/test.html",
    "href": "blog/2023/06/10/quarto_com_model/test.html",
    "title": "\nPlotlyJS version of gapminder data animation\n",
    "section": "",
    "text": "using PlotlyJS, CSV, DataFrames\n\nfunction frame_args(;duration=400, redraw=false) \n    #function to set frame attributes\n    #redraw must be set on true for any other trace type different from scatter\n    attr(\n         frame_duration= duration,\n         mode= \"immediate\",\n         fromcurrent=true,\n         redraw=redraw, \n         transition=attr(duration= duration, easing=\"linear\")\n        )\n    end \n\ndf = dataset(DataFrame, \"gapminder\")\ndf_1952 = df[df.year .== 1952, :]\nfig =Plot(\n    df_1952,\n    x=:gdpPercap, y=:lifeExp, color=:continent , mode=\"markers\", hovertext=:country,\n    hovertemplate =\"&lt;b&gt;%{hovertext}&lt;/b&gt;&lt;br&gt;year: 1952\"*\n    \"&lt;br&gt;gdpPercap: %{x}&lt;br&gt;lifeExp: %{y}&lt;br&gt;pop: %{marker.size}&lt;extra&gt;&lt;/extra&gt;\",\n    marker=attr(size=:pop, sizeref=435928, sizemode=\"area\"),\n    Layout(\n        title_text =\"Life Expectancy vs Per Capita GDP (1952)\", title_x = 0.5,\n        xaxis=attr(\n            type=\"log\", range=[2, 5],\n            title_text=\"GDP per capita (2000 dollars)\"),\n        yaxis=attr(title_text=\"Life Expectancy (years)\", range=[25, 90]),\n          ));\ncontinents=[\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"]\nyears = collect(1952:5:2007)\nn_frames= length(years)\nframes  = Vector{PlotlyFrame}(undef, n_frames)\n\nfor k in 1:length(years)\n    dfr= df[df.year .== years[k], :]\n    figaux=Plot(\n            dfr,\n            x=:gdpPercap, y=:lifeExp, color=:continent , mode=\"markers\", hovertext=:country,\n            marker=attr(size=:pop))  \n    frames[k] = frame(data=[attr(x=figaux.data[j].x,\n                                 y=figaux.data[j].y,\n                                 hovertext=figaux.data[j].hovertext,\n                                 hovertemplate =\"&lt;b&gt;%{hovertext}&lt;/b&gt;&lt;br&gt;year: $(years[k])\"*\n                                 \"&lt;br&gt;gdpPercap: %{x}&lt;br&gt;lifeExp: %{y}\"*\n                                 \"&lt;br&gt;pop: %{marker.size}&lt;extra&gt;&lt;/extra&gt;\",\n                                 marker_size=figaux.data[j].marker_size, \n                                 marker_color=figaux.data[j].marker_color,\n                                 ) for j in 1:length(continents)],\n                      layout=attr(title_text =\"Life Expectancy vs Per Capita GDP ($(years[k]))\"), #update title\n                      name=\"fr$k\", #frame name; it is passed to slider \n                      traces=[0, 1, 2, 3, 4] # the above 5-vector, data, is updating the traces fig.data[1], ....fig.data[5] \n                        ) \nend    \nfig.frames=frames \nrelayout!(fig, \n          sliders =[attr(active=0, \n                         len= 0.9,\n                         pad= attr(b= 10, t= 60),\n                         x= 0.1, y=0, #slider starting position\n                         xanchor= \"left\",\n                         yanchor= \"top\",\n                         steps=[attr(label=\"$(years[k])\",\n                                     method=\"animate\",\n                                     args=[[\"fr$k\"], # match the frame[:name]\n                                           frame_args(;)\n                                 ]) for k in 1:n_frames ]\n             )],\n           updatemenus=[\n            attr(type= \"buttons\",\n                 buttons= [\n                    attr(\n                        args= [nothing, frame_args(;)],\n                        label= \"&#9654;\",\n                        method= \"animate\",\n                    ),\n                    attr(\n                        args= [[nothing], frame_args(;duration=0)],\n                        label= \"&#9724;\",\n                        method= \"animate\",\n                    )\n                ],\n                pad = attr(r=10, t=70),\n                direction= \"left\",\n                x=0.1, y=0, #button position \n                xanchor= \"right\",\n                yanchor= \"top\"\n            )\n        ])\ndisplay(fig)                                            \n\n\nusing PlotlyJS, CSV, DataFrames\n\nfunction frame_args(;duration=400, redraw=false) \n    #function to set frame attributes\n    #redraw must be set on true for any other trace type different from scatter\n    attr(\n         frame_duration= duration,\n         mode= \"immediate\",\n         fromcurrent=true,\n         redraw=redraw, \n         transition=attr(duration= duration, easing=\"linear\")\n        )\n    end \n\ndf = dataset(DataFrame, \"gapminder\")\ndf_1952 = df[df.year .== 1952, :]\nfig =Plot(\n    df_1952,\n    x=:gdpPercap, y=:lifeExp, color=:continent , mode=\"markers\", hovertext=:country,\n    hovertemplate =\"%{hovertext}year: 1952\"*\n    \"gdpPercap: %{x}lifeExp: %{y}pop: %{marker.size}\",\n    marker=attr(size=:pop, sizeref=435928, sizemode=\"area\"),\n    Layout(\n        title_text =\"Life Expectancy vs Per Capita GDP (1952)\", title_x = 0.5,\n        xaxis=attr(\n            type=\"log\", range=[2, 5],\n            title_text=\"GDP per capita (2000 dollars)\"),\n        yaxis=attr(title_text=\"Life Expectancy (years)\", range=[25, 90]),\n          ));\ncontinents=[\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"]\nyears = collect(1952:5:2007)\nn_frames= length(years)\nframes  = Vector{PlotlyFrame}(undef, n_frames)\n\nfor k in 1:length(years)\n    dfr= df[df.year .== years[k], :]\n    figaux=Plot(\n            dfr,\n            x=:gdpPercap, y=:lifeExp, color=:continent , mode=\"markers\", hovertext=:country,\n            marker=attr(size=:pop))  \n    frames[k] = frame(data=[attr(x=figaux.data[j].x,\n                                 y=figaux.data[j].y,\n                                 hovertext=figaux.data[j].hovertext,\n                                 hovertemplate =\"%{hovertext}year: $(years[k])\"*\n                                 \"gdpPercap: %{x}lifeExp: %{y}\"*\n                                 \"pop: %{marker.size}\",\n                                 marker_size=figaux.data[j].marker_size, \n                                 marker_color=figaux.data[j].marker_color,\n                                 ) for j in 1:length(continents)],\n                      layout=attr(title_text =\"Life Expectancy vs Per Capita GDP ($(years[k]))\"), #update title\n                      name=\"fr$k\", #frame name; it is passed to slider \n                      traces=[0, 1, 2, 3, 4] # the above 5-vector, data, is updating the traces fig.data[1], ....fig.data[5] \n                        ) \nend    \nfig.frames=frames \nrelayout!(fig, \n          sliders =[attr(active=0, \n                         len= 0.9,\n                         pad= attr(b= 10, t= 60),\n                         x= 0.1, y=0, #slider starting position\n                         xanchor= \"left\",\n                         yanchor= \"top\",\n                         steps=[attr(label=\"$(years[k])\",\n                                     method=\"animate\",\n                                     args=[[\"fr$k\"], # match the frame[:name]\n                                           frame_args(;)\n                                 ]) for k in 1:n_frames ]\n             )],\n           updatemenus=[\n            attr(type= \"buttons\",\n                 buttons= [\n                    attr(\n                        args= [nothing, frame_args(;)],\n                        label= \"▶\",\n                        method= \"animate\",\n                    ),\n                    attr(\n                        args= [[nothing], frame_args(;duration=0)],\n                        label= \"◼\",\n                        method= \"animate\",\n                    )\n                ],\n                pad = attr(r=10, t=70),\n                direction= \"left\",\n                x=0.1, y=0, #button position \n                xanchor= \"right\",\n                yanchor= \"top\"\n            )\n        ])\ndisplay(fig)"
  },
  {
    "objectID": "blog/2023/06/10/quarto_com_model/index.html#quarto-is-not-just-for-static-reports",
    "href": "blog/2023/06/10/quarto_com_model/index.html#quarto-is-not-just-for-static-reports",
    "title": "Scientific Communication with Quarto: Economic Models",
    "section": "",
    "text": "Notebook coding (Jupyter, Rmarkdown, and Quarto) has gotten popular in the last decade. It allows us to tell a story with code and data, and it makes scientific communication more transparent and reproducible. I use Quarto to share my current results with my supervisor and coauthors, especially when I am in the playground stage of the project.\nWhile it is naturally useful in that it is an easy tool for creating reports, exploiting its HTML feature, we can enrich communication even further. Here, I introduce my use case of GIF and Observable JS for economic models with Julia.\nImagine that you are working on a very simple life-cycle model:\nFor \\(t = 1, \\dots, T\\), households solve \\[\nV(t, e, x) = \\max_{c, x'} \\frac{c^{1 - \\sigma}}{1 - \\sigma} + \\beta \\mathbb{E}V(t + 1, e', x')\n\\] \\[\n\\begin{aligned}\nc + x' &\\le (1 + r)x + ew \\\\\n\\text{Pr}(e' | e) &= \\Gamma(e) \\\\\nc, x' &\\ge 0\n\\end{aligned}\n\\]\nSee the following code for the parameters and the solution algorithm.\n\n\nCode\nusing Parameters\nusing QuantEcon\nusing Plots\nusing LaTeXStrings\nusing CSV\nusing DataFrames\n\n@with_kw struct Model\n    \n    # Grid for x\n    nₓ::Int = 30\n    x̲::Float64 = 0.1\n    x̄::Float64 = 4.0\n    x_grid::Vector{Float64} = range(start = x̲, stop = x̄, length = nₓ)\n    \n    # Grid for e: parameters for Tauchen\n    nₑ::Int = 10\n    σ_ε::Float64 = 0.02058\n    λ_ε::Float64 = 0.99\n    m::Float64 = 1.5\n    mc::MarkovChain = tauchen(nₑ, λ_ε, σ_ε, 0.0, m)\n    e_grid::Vector{Float64} = exp.(mc.state_values)\n    P::Matrix{Float64} = mc.p\n\n    # Utility function\n    σ::Float64 = 2.0\n    β::Float64 = 0.97\n    T::Int = 10\n\n    # Prices\n    r::Float64 = 0.07\n    w::Float64 = 5.0\n    \nend\n\nu(c, m::Model) = isone(m.σ) ? log(c) : c^(1 - m.σ) / (1 - m.σ);\n\nfunction solve(m::Model)\n\n    @unpack T, nₓ, nₑ, r, w, β, P, x_grid, e_grid = m\n\n    V = zeros(nₓ, nₑ, T)\n\n    for t = T:-1:1, iₓ= 1:nₓ, iₑ = 1:nₑ\n        \n        utility = -Inf\n        for iₓ′ = 1:nₓ\n            \n            expected = (t == T) ? 0.0 : \n                sum(P[iₑ, iₑ′] * V[iₓ′, iₑ′, t+1] for iₑ′ = 1:nₑ)\n            c = (1 + r) * x_grid[iₓ] + e_grid[iₑ] * w - x_grid[iₓ′]\n            \n            if c &gt; 0\n                utility = max(u(c, m) + β * expected, utility)\n            end\n    \n        end\n    \n        V[iₓ, iₑ, t] = utility\n    end\n\n    return V\nend\n\nm = Model()\nV = solve(m);\n\n\nA traditional way to show the value function is to plot for selected \\(e\\) and \\(t\\).\n\n\nCode\nps = []\n\ny̲, ȳ = minimum(V) * 1.1, maximum(V) + 0.1\nfor (i, t) ∈ enumerate([1, 4, 7, 10])\n    \n    p = plot(m.x_grid, V[:, 1, t], \n        xlabel = \"x\",\n        ylims = (y̲, ȳ),\n        label = L\"e_1\", \n        legend = :bottomright, \n        title = \"t = $t\")\n    plot!(m.x_grid, V[:, 5, t], label = L\"e_5\")\n    plot!(m.x_grid, V[:, 10, t], label = L\"e_{10}\")\n    push!(ps, p)\nend\n\nplot(ps...)\n\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis is not bad, however, we can add more information by using GIF."
  },
  {
    "objectID": "blog/2023/06/10/quarto_com_model/index.html#footnotes",
    "href": "blog/2023/06/10/quarto_com_model/index.html#footnotes",
    "title": "Scientific Communication with Quarto: Economic Models",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nYou can use CSV, TSV, JSON, Arrow (uncompressed), and SQLite as data input. See Data Sources↩︎\nWhile the parameters r, w, and t are defined in the next cell, the order of the Observable JS cells do not change the results.↩︎"
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html",
    "href": "blog/2023/09/06/docker_template/index.html",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "",
    "text": "Since Docker is a simple and clean method to guarantee the replicablity of the research, I have been using Docker environments for my research since 2020. During these three years, I have been trying to make my environment more minimal and portable so that I can set up, modify, and deliver (to AWS, GCP, etc.) my environment as easily as possible.\nHere is the GitHub template  for this environment. I usually use this template to start a new project. A project made on this template can be replicated by only the 4 steps below.1\n\ngit clone\nIn VSCode, “Open in Remote Containers”\nrenv::restore() (pip install -r requirements.txt, Pkg.instantiate())\ndvc pull\n\n\n\nI use R, Julia, \\(\\LaTeX\\), and sometimes Python for my research. Also, I use Git & GitHub for version control and DVC for data management. If you are not familiar with DVC, you may want to read the materials of my previous workshop .\nGiven these conditions, I have concluded that the following setup is the most minimal and portable.\n\nEverything is done in VSCode. Use Dev Containers Extension\nAn rocker-based image since R is always required\nPython is required because DVC is a Python package\nJulia is optional, depending on the project\nTinyTeX is enough for \\(\\LaTeX\\)\nR, Python, Julia, TinyTeX packages are cached in Docker Volumes\n\n\n\n\n\n\n\nWhy R is required? Why rocker-based?\n\n\n\nI think R is required in all the fields of data analysis for writing papers. This is not only because various estimation methods are provided in R in my field, economics, but also because there are no packages that can make graphs as beautiful as ggplot2 and tables as functional as kableExtra in other languages. If you are interested in how I make graphs and tables, please refer to my previous workshop \nAlso, why not Ubuntu or other images? This is because installing R and Rstudio on Linux is more complicated than installing Python or Julia. If you look at the Dockerfile in my template, you will see that installing Python and Julia is quite easy. Hence, I think it is best to use the rocker image since R is required anyway."
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#docker-環境",
    "href": "blog/2023/09/06/docker_template/index.html#docker-環境",
    "title": "A Minimal & Portable Research Environment",
    "section": "Docker 環境",
    "text": "Docker 環境\nhttps://github.com/kazuyanagimoto/dockerR/blob/main/Dockerfile\n\nR\nホスト側にRのパッケージはキャッシュするので, rocker/rstudioで十分です. renvがインストールされていないことだけが玉に瑕で, 最初に環境を構築するときは install.packages(\"renv\") しないといけません. 地理情報を扱うプロジェクトの時だけ rocker/geospatial に変更しています.\nパッケージ管理はrenv一択であると考えます. パッケージを追加するたびごとにいつもrenv::snapshot()で記録をrenv.lockファイルに残すことができ, 同様のパッケージを他のコンピュータで再現する際にも renv::restore() で一発です. renvを用いたパッケージ管理は以下の記事でも解説しています.\nhttps://zenn.dev/nicetak/articles/r-tips-cleaning-2022\n\n\nPython\n僕はPythonはDVCの依存関係ぐらいにしか使わないことが多いので, 特にバージョンにこだわりがなく, aptでインストールできるものをインストールします. また, Pythonを分析で使わないといけない場合は (スクレイピングや自然言語処理などで) pip と requirements.txt で管理します.\n:::details requirements.txt で管理する理由 2023年8月現在, Pythonの仮想環境は混迷を極めていると思います. ざっと見ただけでもvenv, anaconda, pyenv, poetry, ryeなどさまざまなツールがあって何が最適か, 長く使えるのか分かりません. そもそも, Dockerで環境を構築するのだからパッケージのバージョン (と依存性) が分かればいいので, 多機能なツールは使う必要がないと考えています. 正直, pip install -r requirements.txt と pip freeze &gt; requirements.txt で十分な気がしてなりません. ただ本格的にPythonを研究で使っているわけではないので, 誤解があればご指摘ください.\n:::\n\n\nJulia\nDockerfileから明らかではあると思いますが, Juliaのバージョンを指定してインストールします. 個人的な経験ですが, Juliaはアップデートによって高速化こそされ, バグで動かなくなるという自体にはあまり遭遇していません. そのため, 基本的には最新のバージョンを指定して, プロジェクトの最中にアップデートがあれば数字を書き換えてビルドし直します.\nパッケージ管理はProject.tomlを使いましょう. これはJuliaの標準的なパッケージ管理ファイルで, Juliaのパッケージを追加するたびに自動で更新されます. はじめにProject.tomlファイルをからファイルで作成したあとは, Pkg.activate()で環境をアクティベートして使ってください. またProject.tomlからパッケージをインストールする場合は, Pkg.instantiate()でインストールしてください.\n\n\nその他\n\nopenssh-client コンテナの中から, GitHubにSSHで通信するのに必要です\nDVCはPythonのパッケージなのでdvcコマンドをターミナルで使用できるようにパスを通しています\n最後にキャッシュしたパッケージの権限を変更しています. これは Docker Volumesをマウントした場合, root権限で作成されてしまい, ユーザ権限では書き込めなくなってしまうためです.\n\n:::details コンテナ内でGitHubにSSHする方法について コンテナ内で作業するため, git pull や git push もコンテナ内で行いたくなります. またDVCは基本的にはコンテナの中にしか導入されていないため, コンテナ内で Git + DVC の作業を完結させたいです. そのためにはホスト環境のSSHキーをコンテナに移す必要がありますが, これはssh-agent にキーを追加してあれば, Remote Containers の機能によって, 自動で鍵が使えます. 設定はホストOSごとに異なるので, 詳しくは公式ドキュメントの Developping inside a container の “Sharing Git credentials with your container” の節を読むことをおすすめします.\n私はホストOSがWindowsのWSLであるので, ~/.bash_profile に以下を記述してます.\n# SSH-Agent\neval \"$(ssh-agent -s)\"\nif [ -z \"$SSH_AUTH_SOCK\" ]; then\n   # Check for a currently running instance of the agent\n   RUNNING_AGENT=\"`ps -ax | grep 'ssh-agent -s' | grep -v grep | wc -l | tr -d '[:space:]'`\"\n   if [ \"$RUNNING_AGENT\" = \"0\" ]; then\n        # Launch a new instance of the agent\n        ssh-agent -s &&gt; $HOME/.ssh/ssh-agent\n   fi\n   eval `cat $HOME/.ssh/ssh-agent`\nfi\nssh-add $HOME/.ssh/id_ed25519\nちなみに, 最終行の ssh-add が公式ドキュメントと異なり, 記述する必要がありました. :::\n\n\ndocker-compose.yml\nhttps://github.com/nicetak/dockerR/blob/main/docker-compose.yml\nポイントはrenv のキャッシュをホスト側のDocker Volumesにマウントしているところです. これによって一度インストールしたRパッケージはホスト側にも保存されることになるため, DockerをビルドをするたびにRのパッケージをインストールし直す必要がなくなります. また, 複数のプロジェクトでDocker環境を使い分けている際に, 重複するパッケージをインストールしなくてよくなります. また, Julia, Python, TinyTeXのパッケージにも同様にキャッシュしています.\n:::details Docker Volumesとは\nDocker VolumesはDockerコンテナのデータをホスト側に保存するための仕組みです. これによって, コンテナを削除してもデータを保持することができます. なお, 初めてこのテンプレートを使う際はDocker Volumesが存在しないので, 以下のコマンドで作成する必要があります.\ndocker volume create renv\ndocker volume create pip\ndocker volume createe julia\ndocker volume create TinyTeX\ndocker volume create fonts\nなお, このコマンド叩かずにDockerをビルドすると, Docker Volumesが自動で作成されます. この場合はDocker Volumesの名前がPROJECTNAME_renvのようになるので, 他のプロジェクトですでにインストールしたパッケージを使い回すことができません.\nまた, 以前の私の記事のようにインターネット上では, Docker Volumesを使わずに ~/.cache/R/renv のようにホストOSの領域に直接マウントしている例がありますが, これはソースコードの場合は良いですが, パッケージの場合はおすすめできません. MacOSやWindows (WSL2を除く) の場合ファイルシステムがLinux (Docker) と異なるため, パッケージを読んで実行する際に著しくスピードが落ちる可能性があります. Docker内で使うパッケージはDockerの領域でキャッシュしましょう.\n:::"
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#latex-環境",
    "href": "blog/2023/09/06/docker_template/index.html#latex-環境",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "\\(\\LaTeX\\) 環境",
    "text": "\\(\\LaTeX\\) 環境\nDocker内で\\(\\LaTeX\\)を使うには, aptでtexliveをインストールしたり, docker-compose.ymlの別サービスとして使うという事もできますが, Rにはtinytexという軽くてとても便利なパッケージがあるのでこれを利用します.2 なお, VSCodeで\\(\\LaTeX\\)を扱う際は, 以下の記事も参考にしていただければ幸いです.\nhttps://zenn.dev/nicetak/articles/zotero-tex-bibtex\n\nTinyTeXとは\nTinyTeXは超軽量の\\(\\LaTeX\\)のディストリビューションです. コンパイルの際に自動で足りないパッケージをインストールしてコンパイルしてくれるため, 事前に大量のパッケージをインストールして\\(\\LaTeX\\)環境を構築する必要がありません. そのため, RmarkdownやQuartoでPDFをコンパイルする際にはデフォルトで使用されています. この軽量であるという特徴はDocker環境とかなり相性がよく, rocker/verseイメージでも採用されています. 今回は, このTinyTeXをVSCodeでの\\(\\LaTeX\\)コンパイラーにしてしまおうという話です. また, この時インストールされる\\(\\LaTeX\\)のパッケージもDocker Volumesにキャッシュされます.\n\n\nTinyTeXのインストールとVSCodeでの設定\nTinyTeXをインストールする際は, tinytex::install_tinytex() というRコマンドがあります. ただ, TinyTeXを用いてインストールされるパッケージはDocker Volumesにキャッシュしたいため, 以下のようにインストールフォルダを指定します.\ntinytex::install_tinytex(dir = \"/home/rstudio/.TinyTeX\", force = TRUE)\nなお, 一度Docker Volumesにインストールしてしまえば, 今後はこのコマンドを他のプロジェクトであっても実行する必要はありません.\nVSCodeでTinyTeXを\\(\\LaTeX\\)のコンパイラにするために, settings.jsonを以下のように編集します. なお, WORKSPACE_DIR/.vscode/settings.jsonに設定した場合は, このワークスペースのみで有効な設定になります. チームプロジェクトではsettings.jsonをgit-ignoreすることも多いと考えるので, テンプレートでは_settings.jsonと名前を変えてあります.\nhttps://github.com/kazuyanagimoto/dockerR/blob/main/.vscode/_settings.json\n:::details なぜOverleafを使わないのか\nOverleafはもはや\\(\\LaTeX\\)のエディターの第一候補といっても差し支えないでしょう. 二年前の話ですが, 修士の同級生がOverleafと\\(\\LaTeX\\)の概念の区別がついていないことにびっくりしました. しかし, 私はOverleafにいくつもの不満点があります.\n\n無料版ではOverleafはGitHubが連携できない.\nGitHubのブランチも分けられない\nスライドや論文の図表の見え方の修正をしたいのにいちいち, アップロードしないといけない\nファイル数が1プロジェクトあたり最大で2000ファイルと制限されている.\nたまにサービスが落ちる. 締め切り前であった場合これは致命的\nGitHub Copilotが使えないエディタは時間の無駄 (後述)\n\n正直, TinyTeXとVSCodeのLaTeX Workshop拡張があれば環境の設定も難しくなく, コンパイルもローカルのコンピュータにもよりますが早いので, 私にとってはOverleafを使う意味はあまりありません.\n:::"
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#vscode-extensionについて",
    "href": "blog/2023/09/06/docker_template/index.html#vscode-extensionについて",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "VSCode Extensionについて",
    "text": "VSCode Extensionについて\nVSCodeのRemote Containersのための設定は以下のとおりです. ほとんど直感的ですが, Extensionに関してはいくつか説明を加えたいと思います.\nhttps://github.com/kazuyanagimoto/dockerR/blob/main/.devcontainer/devcontainer.json\n\nGramarly Extension\n言わずとしれた英文校正サービスのGrammarlyのVSCode Extensionです. これを入れるだけで, 無料でスペルミスから三単現のsのつけ忘れ, 冠詞の修正などをこなしてくれます. 有料版の機能も使うことが可能です. また, .tex, .Rmd, .qmdファイルにおいても使うことが可能です. 詳しくは拡張機能自体のヘルプを参照にしてほしいですが, 以下のようにconfigファイルに拡張子追加するだけです.\n{\n  \"grammarly.files.include\": [\"**/README.md\", \"**/readme.md\", \"**/*.txt\", \"**/*.tex\", \"**/*.Rmd\", \"**/*.qmd\"]\n}\n\n\nEdit CSV\nCSVやTSVファイルなどをサクッと確認や編集したいときに大変便利な拡張機能です. これがないと, Excelのような表計算ソフトを使ったりしないとプレビューもろくにできないので, かなり重宝します. とくにリモートで作業する際には, ローカルでExcelなどでファイルを開くのはかなり面倒なので, この拡張機能は必須です.\n\n\nGitHub Copilot\n2023年8月現在, GitHub Copilotを使わずにコーディングするのは時間の無駄です. ゲームで言うなら舐めプです. この拡張機能は移り変わりが激しいので, 最新のドキュメントを参考に導入してみてください."
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#ワークフロー",
    "href": "blog/2023/09/06/docker_template/index.html#ワークフロー",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "ワークフロー",
    "text": "ワークフロー\n実際にこのテンプレートを用いてプロジェクトを始める際の手順と作業中のワークフローを紹介します. 管理者はこのテンプレートを使ってプロジェクトを作成し, 共同作業者はそのプロジェクトをクローンして作業をすることを想定しています. 作業中は管理者も共同作業者も同じ手順で作業を進めます.\n\n管理者\n\nDockerのVolumeを作る. (初めてこのテンプレートを使う際のみ)\n\ndocker volume create renv\ndocker volume create pip\ndocker volume createe julia\ndocker volume create TinyTeX\ndocker volume create fonts\n\nGitHubでこのテンプレートから新しいレポジトリを作り, ローカルにクローンする.\nVSCodeでこのレポジトリを開く. (Remote Containers)\nRのプロジェクトを作成する. Rstudioを用いる場合, localhost:8787にアクセスし, プロジェクトを作成する.\nrenv::init() でパッケージ管理を開始する. おそらく事前にinstall.packages(\"renv\")が必要.\npip install dvc dvc-gdrive でDVCをインストールする. 二回目以降はpipのキャッシュがあるためこのコマンドは不要.\nDVC環境を設定する\n\nGoogle Drive上にフォルダを作成し, そのフォルダのIDをコピーする.\ndvc init && dvc remote add -d myremote gdrive://&lt;Google DriveのフォルダID&gt; を実行する.\nGoogle Driveのフォルダは共同作業者と共有の設定をする.\n\nLaTeX用のVSCodeの設定をする. 基本的には.vscode/_settings.json を .vscode/settings.json にコピーするだけでOK.\nJuliaの環境を設定する. Project.tomlの空ファイルを作成し, Pkg.activate()でアクティベートする.\n\n\n\n共同作業者\n\nDockerのVolumeを作る. コマンドは管理者と同様. (初めてこのテンプレートを使う際のみ)\nGitHubで管理者が作ったレポジトリをクローンする.\nVSCodeでこのレポジトリを開く. (Remote Containers)\nRのプロジェクトを開く.\nrenv::restore() でパッケージをインストールする.\ndvc pull でデータをダウンロードする.\nLaTeX用のVSCodeの設定をする. 基本的には.vscode/_settings.json を .vscode/settings.json にコピーするだけでOK.\nJuliaのパッケージをインストールする. Pkg.activate(); Pkg.instantiate()でインストールする.\n\n\n\n作業中\n\nRのパッケージを追加する際は, renv::snapshot()で記録をrenv.lockファイルに残す.\nDVCでデータを追加する際は, dvc addで追加する. 基本的にはdvc add data/でディレクトリごと追加する.\nJuliaのパッケージを追加する際は, Pkg.add(\"パッケージ名\")で追加する. Project.tomlに自動で記録される.\n以上の作業が終わった上で, git add, git commit, git push する.\n作業が終わったら, dvc push でデータをアップロードする."
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#まとめ",
    "href": "blog/2023/09/06/docker_template/index.html#まとめ",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "まとめ",
    "text": "まとめ\n以上が私が考えるミニマルでポータブルな研究環境のテンプレートとその使い方でした. VSCodeとDockerで完結しているため, 実際にはかなり少ない手順でまったく同一の環境を他のコンピュータ上で再現することができます. また, すべてのパッケージをキャッシュするため, Dockerのビルド時間もかなり少なくなっておりメンテナンスのコストも結果下がりました. 私にとってのベストな環境が皆さんにとってもベストな環境であるとは限りませんが, この記事が皆さんの研究の一助になれば幸いです."
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#footnotes",
    "href": "blog/2023/09/06/docker_template/index.html#footnotes",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nYou need to install Docker and VSCode in advance. For the first project on the computer, you need to set up the Docker Volumes.↩︎\nTinyTeX can also be installed and used in an environment without R. For details, please refer to the official documentation.↩︎"
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#introduction",
    "href": "blog/2023/09/06/docker_template/index.html#introduction",
    "title": "A Minimal & Portable Research Environment",
    "section": "",
    "text": "自分自身の研究のための環境構築についてこれまで二本の記事を書いてきました.\n@card @card\nこれらの記事から二年ほどたち, いくつかの点において不満点が出てきました. 特に, GCPや自宅のサーバー上でリモートで作業することが多くなってきたので, よりミニマルでポータブルな環境が必要になりました.\n以下では, 現時点で最小限の努力で環境を再現ができることを目標にしたDockerベースのGitHubレポジトリのテンプレートとその使い方を紹介します. このテンプレートを用いて作られた環境は, 新たなコンピュータ上で最短4ステップで環境を再現できるようになります.\n\ngit clone\nVSCodeの”Open in Remote Containers”\nrenv::restore()\ndvc pull\n\nこの環境とセットアップはこのレポジトリにテンプレートとしておいて置きます. 実際, 私自身も新しいプロジェクトを始める際にはこのテンプレートを用いて環境を作っています.\nhttps://github.com/nicetak/dockerR/\n\n\n\n私自身が研究の際に使う言語はR, Julia, \\(\\LaTeX\\), と時々Pythonです. また, バージョン管理にはGitを, データ管理にはDVCを使っています. DVCによるデータ管理は以前の記事もご覧ください.\nhttps://zenn.dev/kazuyanagimoto/articles/vscode-docker-rstudio\nこれらの条件とミニマルさポータブルさを満たすために私が出した結論は以下の通りです.\n\nVSCode内ですべて完結する. DevContainerを使う.\nRは必須なので, rockerベースのDockerイメージ\nDVCはPythonのパッケージなのでPythonも必須.\nJuliaはオプション. プロジェクトごとに使ったり使わなかったり.\n\\(\\LaTeX\\) はRのtinytexで必要かつ十分. (後述)\nR, Python, Julia, TinyTeXのパッケージはDocker Volumesによってホスト側にキャッシュする.\n\n:::details なぜRは必須か. なぜrockerベースか. 私はデータ分析を扱う分野においての論文執筆でRは必須と考えます. これは私の専門の経済学で様々な推定方法がRで提供されているからというだけではありません. 最大の理由はggplot2より美しいグラフとkableExtraほどの多機能な\\(\\LaTeX\\)の表を作れるパッケージが他の言語では提供されていないからです. 私なりの図と表の作り方は以前の記事にまとめてあります.\nhttps://zenn.dev/nicetak/articles/r-tips-graph-2022 https://zenn.dev/nicetak/articles/r-tips-table-2022\nまたなぜubuntuやイメージベースではないのかというと, LinuxへのRとRstudioのインストールがPythonやJuliaより面倒に感じるからです. Dockerfileを見ていただければお分かりかと思いますが, PythonとJuliaのインストールがかなり簡単なのに対し, RとRstudioのインストールはかなり面倒です. どうせRは必須であるので, rockerベースで作るのが最適と感じています. さらに, あくまでおまけではありますが, TinyTeXの扱いがR環境があるとやりやすいということは大きなメリットでした.\n:::"
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#more-minimal-and-portable-environment",
    "href": "blog/2023/09/06/docker_template/index.html#more-minimal-and-portable-environment",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "",
    "text": "Since Docker is a simple and clean method to guarantee the replicablity of the research, I have been using Docker environments for my research since 2020. During these three years, I have been trying to make my environment more minimal and portable so that I can set up, modify, and deliver (to AWS, GCP, etc.) my environment as easily as possible.\nHere is the GitHub template  for this environment. I usually use this template to start a new project. A project made on this template can be replicated by only the 4 steps below.1\n\ngit clone\nIn VSCode, “Open in Remote Containers”\nrenv::restore() (pip install -r requirements.txt, Pkg.instantiate())\ndvc pull\n\n\n\nI use R, Julia, \\(\\LaTeX\\), and sometimes Python for my research. Also, I use Git & GitHub for version control and DVC for data management. If you are not familiar with DVC, you may want to read the materials of my previous workshop .\nGiven these conditions, I have concluded that the following setup is the most minimal and portable.\n\nEverything is done in VSCode. Use Dev Containers Extension\nAn rocker-based image since R is always required\nPython is required because DVC is a Python package\nJulia is optional, depending on the project\nTinyTeX is enough for \\(\\LaTeX\\)\nR, Python, Julia, TinyTeX packages are cached in Docker Volumes\n\n\n\n\n\n\n\nWhy R is required? Why rocker-based?\n\n\n\nI think R is required in all the fields of data analysis for writing papers. This is not only because various estimation methods are provided in R in my field, economics, but also because there are no packages that can make graphs as beautiful as ggplot2 and tables as functional as kableExtra in other languages. If you are interested in how I make graphs and tables, please refer to my previous workshop \nAlso, why not Ubuntu or other images? This is because installing R and Rstudio on Linux is more complicated than installing Python or Julia. If you look at the Dockerfile in my template, you will see that installing Python and Julia is quite easy. Hence, I think it is best to use the rocker image since R is required anyway."
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#why-r-is-required-why-rocker-based",
    "href": "blog/2023/09/06/docker_template/index.html#why-r-is-required-why-rocker-based",
    "title": "A Minimal & Portable Research Environment",
    "section": "Why R is required? Why rocker-based?",
    "text": "Why R is required? Why rocker-based?\nI think R is required in all the fields of data analysis for writing papers. This is not only because various estimation methods are provided in R in my field, economics, but also because there are no packages that can make graphs as beautiful as ggplot2 and tables as functional as kableExtra in other languages. If you are interested in how I make graphs and tables, please refer to my previous workshop\nAlso, why not Ubuntu or other images? This is because installing R and Rstudio on Linux is more complicated than installing Python or Julia. If you look at the Dockerfile in my template, you will see that installing Python and Julia is quite easy. Hence, I think it is best to use the rocker image since R is required anyway."
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#docker-environment",
    "href": "blog/2023/09/06/docker_template/index.html#docker-environment",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "Docker Environment",
    "text": "Docker Environment\nFROM rocker/rstudio\n\nRUN apt update && apt install -y \\\n    openssh-client libxt-dev \\\n    # Python\n    python3 python3-pip\n\n# R Package\nRUN R -e \"install.packages(c('renv'))\"\n\n# Julia\nENV JULIA_MINOR_VERSION=1.9\nENV JULIA_PATCH_VERSION=3\n\nRUN wget https://julialang-s3.julialang.org/bin/linux/x64/${JULIA_MINOR_VERSION}/julia-${JULIA_MINOR_VERSION}.${JULIA_PATCH_VERSION}-linux-x86_64.tar.gz && \\\n    tar xvf julia-${JULIA_MINOR_VERSION}.${JULIA_PATCH_VERSION}-linux-x86_64.tar.gz && \\\n    rm julia-${JULIA_MINOR_VERSION}.${JULIA_PATCH_VERSION}-linux-x86_64.tar.gz && \\\n    ln -s $(pwd)/julia-$JULIA_MINOR_VERSION.$JULIA_PATCH_VERSION/bin/julia /usr/bin/julia\n\n# DVC Path\nENV PATH $PATH:~/.pip/bin\n\n# Package Cahce & Permission\nRUN cd /home/rstudio && mkdir .pip .cache .cache/R .cache/R/renv .TinyTeX .julia && \\\n    chown rstudio:rstudio .pip .cache .cache/R .cache/R/renv .TinyTeX .julia\n\nR\nSince I cached R packages in Docker Volumes, I use rocker/rstudio for the base image, which is simplest in the other rocker images. However, it does not have renv, I manually install it in the Dockerfile. Only if you use geospatial packages, you may want to use rocker/geospatial instead.\nThe renv is the best package manager for R, in my opinion. You can record the packages you installed by renv::snapshot() in renv.lock file. Then, you can reproduce the same environment by renv::restore() in other computers. If you are interested in renv, please refer to my previous workshop.\n\n\nPython\nI usually use Python only for DVC, so I don’t care much about the version. I install the latest version that can be installed with apt. In case that I need to use Python for analysis (e.g., scraping or natural language processing), I manage the version of the packages by pip and requirements.txt.\n\npip install -r requirements.txt for installation\npip freeze &gt; requirements.txt for recording\n\n\n\n\n\n\n\nWhy do I manage the packages by requirements.txt?\n\n\n\nAs of September 2023, I think the virtual environment of Python is in chaos. For example, there are various tools such as venv, anaconda, pyenv, poetry, and rye, and I don’t know which one is the best and long-lasting. To be honest, I think pip install -r requirements.txt and pip freeze &gt; requirements.txt are enough because we are building the environment with Docker. However, I am not a researcher mainly using Python, so please let me know if there is any misunderstanding.\n\n\n\n\nJulia\nYou can specify the version of Julia in the Dockerfile by ENV JULIA_MINOR_VERSION=1.9 and ENV JULIA_PATCH_VERSION=3. From my experience, Julia has been updated to be faster, but I have not encountered any bugs. Therefore, I usually specify the latest version and keep updating it during the project.\nFor the package management of Julia, I use Project.toml. The workflow is as follows.\n\nCreate an empty Project.toml file\nActivate the environment by Pkg.activate()\nInstall the packages by Pkg.add(\"Package Name\"), which automatically updates Project.toml\nWhen you clone the project, activate the environment by Pkg.activate() and install the packages by Pkg.instantiate()\n\n\n\nOther Softwares & Settings\n\nopenssh-client is required for SSH communication with GitHub from the container\nSince DVC is a Python package, I add ~/.pip/bin to the PATH\nI change the permission of the cached packages. This is because when you mount Docker Volumes, the packages are created with root permission, and you cannot write them with user permission\n\n\n\n\n\n\n\nUsing Git & GitHub in the container\n\n\n\nSince I work in the container environment, I want to run git pull and git push in the container. To do so, you need to move the SSH key for the GitHub from the host environment to the container. This can be done by adding the key to ssh-agent. With the Remote Containers feature, you can use the key inside of the container automatically. The settings are different for each host OS, so I recommend reading the section “Sharing Git credentials with your container” in the official documentation of Developping inside a container.\nI use Windows WSL as the host OS, so I add the following to ~/.bash_profile. The difference from the official documentation is that I added ssh-add at the end.\n\n\n~/.bash_profile\n\neval \"$(ssh-agent -s)\"\nif [ -z \"$SSH_AUTH_SOCK\" ]; then\n   # Check for a currently running instance of the agent\n   RUNNING_AGENT=\"`ps -ax | grep 'ssh-agent -s' | grep -v grep | wc -l | tr -d '[:space:]'`\"\n   if [ \"$RUNNING_AGENT\" = \"0\" ]; then\n        # Launch a new instance of the agent\n        ssh-agent -s &&gt; $HOME/.ssh/ssh-agent\n   fi\n   eval `cat $HOME/.ssh/ssh-agent`\nfi\nssh-add $HOME/.ssh/id_ed25519\n\n\n\n\n\ndocker-compose.yml\nservices:\n    rstudio:\n        build:\n            context: .\n        environment:\n            - TZ=Europe/Madrid\n            - DISABLE_AUTH=true\n            - PYTHONUSERBASE=/home/rstudio/.pip\n        volumes:\n            - .:/home/rstudio/work\n            - renv:/home/rstudio/.cache/R/renv\n            - pip:/home/rstudio/.pip\n            - julia:/home/rstudio/.julia\n            - TinyTeX:/home/rstudio/.TinyTeX\n            - fonts:/usr/share/fonts\nvolumes:\n  renv:\n    external: true\n  pip:\n    external: true\n  julia:\n    external: true\n  TinyTeX:\n    external: true\n  fonts:\n    external: true\nThe most important point is that I mount the renv cache to the host’s Docker Volumes. This means that once you install the R packages, they will be saved on the host side. Therefore, you don’t need to install R packages every time you build the Docker. Also, when you use Docker environments for multiple projects, you don’t need to install the same packages multiple times. The same is true for Julia, Python, and TinyTeX packages.\n\n\n\n\n\n\nWhat is Docker Volumes?\n\n\n\nDocker Volumes is a mechanism for storing Docker container data on the host side. This allows you to keep the data even if you delete the container. Unlike the binding mount, the data is stored in hidden folders on the host side and optimized for Docker, so it is faster than the binding mount. When you use this template for the first time, you need to create Docker Volumes by the following command.\ndocker volume create renv\ndocker volume create pip\ndocker volume create julia\ndocker volume create TinyTeX\ndocker volume create fonts\nIn some articles on the Internet (including my previous post), the author binding-mounts package caches into the host area directly, such as ~/.cache/R/renv. This is not recommended since the file system of MacOS and Windows (except WSL2) is different from Linux (Docker). The bind mounts may significantly slow down the execution of the package."
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#latex-environment",
    "href": "blog/2023/09/06/docker_template/index.html#latex-environment",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "\\(\\LaTeX\\) Environment",
    "text": "\\(\\LaTeX\\) Environment\nTo use \\(\\LaTeX\\) in Docker, you can install texlive with apt or use it as a separate service in docker-compose.yml. However, there is a very light and convenient package called tinytex in R2, so I will use it.\n\nWhat is TinyTeX?\nTinyTeX is a super lightweight distribution of \\(\\LaTeX\\). It automatically installs missing packages and compiles them, so you don’t need to install a large number of packages in advance to build a \\(\\LaTeX\\) environment. This is why TinyTeX is used by default when compiling PDFs with Rmarkdown or Quarto. This lightness is very compatible with the Docker environment, and it is also adopted in the rocker/verse image. In this template, I will use TinyTeX as the \\(\\LaTeX\\) compiler in VSCode. Also, the \\(\\LaTeX\\) packages installed at this time are cached in Docker Volumes.\n\n\nInstalling TinyTeX and Setting in VSCode\nWhen installing TinyTeX, there is an R command called tinytex::install_tinytex(). However, since I want to cache the packages installed with TinyTeX in Docker Volumes, I specify the installation folder as follows.\ntinytex::install_tinytex(dir = \"/home/rstudio/.TinyTeX\", force = TRUE)\nNote that once you install it in Docker Volumes, you don’t need to run this command again in other Docker projects.\nTo use TinyTeX as the \\(\\LaTeX\\) compiler in VSCode, edit settings.json as this. Note that if you set it in WORKSPACE_DIR/.vscode/settings.json, it will only be valid for this workspace. Since the .vscode/settings.json is often git-ignored in team projects, I have renamed it to _settings.json in the template.\n\n\n\n\n\n\nWhy I don’t use Overleaf?\n\n\n\nOverleaf is probably the first candidate for \\(\\LaTeX\\) editors, however, I don’t use Overleaf for the following reasons.\n\nIn the free version, Overleaf cannot be linked with GitHub\nGitHub branches cannot be separated\nIf I want to modify the appearance of figures and tables in slides and papers, I have to upload them every time\nThe number of files is limited to a maximum of 2000 files per project\nSometimes the service goes down. This is fatal if it is before the deadline\nIt is a waste of time to use an editor that cannot use GitHub Copilot or any other AIs 🫠\n\nI think the setup with TinyTeX and VSCode’s LaTeX Workshop extension is not so difficult, and the compilation is (usually) faster on your local computer."
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#vscode-extensions",
    "href": "blog/2023/09/06/docker_template/index.html#vscode-extensions",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "VSCode Extensions",
    "text": "VSCode Extensions\nThe settings for VSCode Remote Containers are as follows. It is almost intuitive, but I would like to explain some of the extensions.\n{\n    \"name\": \"${localWorkspaceFolderBasename}\",\n    \"dockerComposeFile\": \"../docker-compose.yml\",\n    \"service\": \"rstudio\",\n    \"remoteUser\": \"rstudio\",\n    \"extensions\": [\n        \"REditorSupport.r\",\n        \"quarto.quarto\",\n        \"znck.grammarly\",\n        \"julialang.language-julia\",\n        \"janisdd.vscode-edit-csv\",\n        \"James-Yu.latex-workshop\",\n        \"GitHub.copilot\"\n    ],\n    \"forwardPorts\": [8080, 8787],\n    \"workspaceFolder\": \"/home/rstudio/work\",\n    \"shutdownAction\": \"stopCompose\",\n}\n\nGramarly Extension\nAn unofficial extension of the English proofreading service Grammarly. Just by installing this, it will correct spelling mistakes, missing “s” in the third person singular, and articles. You can also use the paid version by logging in. Also, it can be used in .tex, .Rmd, and .qmd files. I would like you to refer to the help of the extension itself for details, but in short, you can add the extension name by adding the following to the config file.\n{\n  \"grammarly.files.include\": [\"**/README.md\", \"**/readme.md\", \"**/*.txt\", \"**/*.tex\", \"**/*.Rmd\", \"**/*.qmd\"]\n}\n\n\nEdit CSV\nThis is an extension that allows you to quickly preview and edit CSV and TSV files. Without this, you cannot preview or edit CSV files without using spreadsheet software such as Excel.\n\n\nGitHub Copilot\nAs of September 2023, it is a waste of time to code without GitHub Copilot."
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#workflow",
    "href": "blog/2023/09/06/docker_template/index.html#workflow",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "Workflow",
    "text": "Workflow"
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#workflows",
    "href": "blog/2023/09/06/docker_template/index.html#workflows",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "Workflows",
    "text": "Workflows\nI will introduce the workflow when starting a project using this template and when working. The administrator creates a project using this template, and the collaborators clone the project and work on it.\n\nAdministrator\n\nCreate Docker Volumes. (Only for the first time using this template)\n\ndocker volume create renv\ndocker volume create pip\ndocker volume create julia\ndocker volume create TinyTeX\ndocker volume create fonts\n\nCreate a new repository from this template on GitHub and clone it to your local computer\nOpen this repository in VSCode. (Remote Containers)\nCreate an R project. If you use Rstudio, access localhost:8787 and create a project.\nStart package management with renv::init()\nInstall DVC with pip install dvc dvc-gdrive. This command is not required after the second time because of the pip cache\nSet up the DVC environment\n\nCreate a folder on Google Drive and copy its ID\nRun dvc init && dvc remote add -d myremote gdrive://&lt;Google Drive folder ID&gt;\nShare the Google Drive folder with the collaborators (as a normal Google Drive folder)\n\nSet up VSCode settings for LaTeX\n\nFor the first time, run tinytex::install_tinytex(dir = \"/home/rstudio/.TinyTeX\", force = TRUE)\nCopy .vscode/_settings.json to .vscode/settings.json\n\nSet up Julia environment. Create an empty Project.toml file and activate it with Pkg.activate().\n\n\n\nCollaborators\n\nCreate Docker Volumes. (Only for the first time using this template)\nClone the repository created by the administrator on GitHub\nOpen this repository in VSCode. (Remote Containers)\nOpen the R project. (If you use Rstudio, access localhost:8787 and open the project.)\nInstall the R packages with renv::restore()\nInstall Python packages (including DVC) with pip install -r requirements.txt\nDownload the data with dvc pull\nSet up VSCode settings for LaTeX\n\nFor the first time, run tinytex::install_tinytex(dir = \"/home/rstudio/.TinyTeX\", force = TRUE)\nCopy .vscode/_settings.json to .vscode/settings.json\n\nInstall Julia packages with Pkg.activate(); Pkg.instantiate()\n\n\n\nDuring Work\n\nWhen you add an R package, record it with renv::snapshot()\nWhen you add a Julia package, add it with Pkg.add(\"Package Name\"). It will be automatically recorded in Project.toml\nWhen you add a Python package, add it with pip install Package Name and record it with pip freeze &gt; requirements.txt\nWhen you add data with DVC, add it with dvc add. Usually, just add the directory with dvc add data/\nAfter the above work, git add, git commit, and git push\nWhen you finish the work, upload the data with dvc push"
  },
  {
    "objectID": "blog/2023/09/06/docker_template/index.html#fin.",
    "href": "blog/2023/09/06/docker_template/index.html#fin.",
    "title": "A Minimal & Portable Research Environment with Docker",
    "section": "Fin.",
    "text": "Fin.\nThe above is my template for a minimal and portable research environment and how to use it. Since everything is done in VSCode and Docker, you can reproduce exactly the same environment on other computers with very few steps. Also, since all the packages are cached, the build time of Docker is also significantly reduced, resulting in a lower maintenance cost. The best environment for me may not be the best environment for you, but I hope this article will help you in your research 🥂!"
  }
]