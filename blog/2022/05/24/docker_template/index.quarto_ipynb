{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"My Docker Template for R\"\n",
        "date: 2022-05-24\n",
        "author: Kazuharu Yanagimoto\n",
        "draft: false\n",
        "categories: [R, Docker]\n",
        "image: \"feature.png\"\n",
        "twitter-card:\n",
        "    image: \"feature.png\"\n",
        "execute:\n",
        "    eval: false\n",
        "---\n",
        "\n",
        "Docker is one of the best environments for **reproductivity** of the research.\n",
        "I use Docker for basically all my projects, but it took me about 2 years to get to a satisfactory environment setup. I would like to share it here as a template.\n",
        "\n",
        "## Quick Start\n",
        "1. Clone [this repository](https://github.com/kazuyanagimoto/dockerR)\n",
        "1. Open it in VSCode and add Remote-Containers Extension\n",
        "1. From the command palette, choose \"open folder in container\"\n",
        "1. Open `localhost:8787` in a browser\n",
        "1. Create a project for this project directory (by default, choose `/home/rstudio/work`)\n",
        "1. RUN `renv::init()` in the R console\n",
        "1. Set up a [DVC](https://dvc.org/) environment\n",
        "    1. Prepare a folder in Google Drive (and copy the folder code)\n",
        "    1. Init DVC\n",
        "        ```{bash}\n",
        "        dvc init\n",
        "        dvc remote add --default myremote gdrive://GDRIVE_FOLDER_CODE\n",
        "        ```\n",
        "\n",
        "\n",
        "## Brief Explanations\n",
        "In this section, I briefly comment on each file. I assume you are familiar with\n",
        "\n",
        "- R, Rstudio & `renv`\n",
        "- [Docker](https://www.docker.com/)\n",
        "- [VSCode](https://code.visualstudio.com/) and its [Remote-Containers](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers) extension\n",
        "\n",
        "I manage data files by [DVC](https://dvc.org/).\n",
        "But if you have another strategy for data management, ignore these parts.\n",
        "\n",
        "\n",
        "### `Dockerfile`\n",
        "```{.bash}\n",
        "FROM rocker/verse\n",
        "\n",
        "RUN apt update && apt install -y gnupg openssh-client libpoppler-cpp-dev\n",
        "\n",
        "# DVC\n",
        "RUN wget \\\n",
        "       https://dvc.org/deb/dvc.list \\\n",
        "       -O /etc/apt/sources.list.d/dvc.list && \\\n",
        "    wget -qO - https://dvc.org/deb/iterative.asc | apt-key add - && \\\n",
        "    apt update && \\\n",
        "    apt install -y dvc \n",
        "\n",
        "# R Packages\n",
        "RUN R -e \"install.packages(c('languageserver', 'renv'))\"\n",
        "\n",
        "# Rstudio Global Options\n",
        "COPY --chown=rstudio:rstudio .config/rstudio/rstudio-prefs.json /home/rstudio/.config/rstudio/rstudio-prefs.json\n",
        "```\n",
        "\n",
        "#### R image\n",
        "If you don't have any preferences, I recommend you use one of the rocker image series\n",
        "of [rocker-org](https://github.com/rocker-org/rocker):\n",
        "\n",
        "- rocker/rstudio\n",
        "- rocker/tidyverse\n",
        "- rocker/verse\n",
        "- rocker/geospatial\n",
        "\n",
        "Because I currently write a paper by Rmarkdown,\n",
        "I usually use `rocker/verse` and use `rocker/geospatial` for spatial analysis.\n",
        "\n",
        "#### DVC\n",
        "I just follow the official guide for [Install from repository](https://dvc.org/doc/install/linux#from-repo-on-debian-ubuntu).\n",
        "If your environment includes python, it is easier to install it via `pip`.\n",
        "\n",
        "#### R packages\n",
        "I use `renv` for dependency management.\n",
        "`languageserver` allows us to run a code in VSCode, but I don't usually use it.\n",
        "\n",
        "#### Rstudio Global Options\n",
        "When Rstudio launches, it loads the `~/.config/rstudio/rstudio-prefs.json` file for general settings. So I prepare `/.config/rstudio/rstudio-prefs.json`,\n",
        "and it allows me to use Rstudio with my favorite settings.\n",
        "\n",
        "If you want to use your own settings, I recommend you\n",
        "\n",
        "1. Open Rstudio \n",
        "1. Set up by GUI (Tools -> Global Options)\n",
        "1. Copy `~/.config/rstudio/rstudio-prefs.json` (in container)\n",
        "1. Paste it on `/.config/rstudio/rstudio-prefs.json` (in host)\n",
        "\n",
        "\n",
        "### `docker-compose.yml`\n",
        "\n",
        "```{.yaml}\n",
        "version: '3'\n",
        "services:\n",
        "    rstudio:\n",
        "        build:\n",
        "            context: .\n",
        "        environment:\n",
        "            - TZ=Europe/Madrid\n",
        "            - DISABLE_AUTH=true\n",
        "            - RENV_PATHS_CACHE=/home/rstudio/.renv/cache\n",
        "        volumes:\n",
        "            - .:/home/rstudio/work\n",
        "            - $HOME/.renv:/home/rstudio/.renv/cache\n",
        "```\n",
        "\n",
        "#### DISABLE_AUTH=true\n",
        "You don't need to type a password for each new session.\n",
        "\n",
        "#### Cache for `renv`\n",
        "By setting the `RENV_PATH_CACHE` and mounting the directory,\n",
        "you don't need to re-install packages.\n",
        "In other words, you can share packages with other (docker) projects and\n",
        "don't have to re-install all the packages when you rebuild a container.\n",
        "\n",
        "\n",
        "\n",
        "Have fun!"
      ],
      "id": "d8944544"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/kazuharu/Library/Jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}